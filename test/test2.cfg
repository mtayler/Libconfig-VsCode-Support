Tree :
{
  Levels = (
	  {
	  Name = "Scenario Type";
	  Level = 1;
	  Display = true;
	  Branches = (
	  {
	    Master_Branches = (( "*" ));
		Valid_Branches = ( "SingleScenario","AgentScreening","BatchedScenario","ParameterSensitivity");
		Display_Names = ( "Single Scenario","Agent Screening","Batched Scenario","Parameter Sensitivity");
		Images = ("Create Scenario.png", "Agent Screening.png","Batch Scenario.png", "Create Scenario.png");
	  });
	},
	{ // Threat Area
	  Name = "Threat Area";
	  Level = 2;
	  Master_Level = ("Scenario Type");
	  Display = true;
	  Branches = (
		{
		  Master_Branches = (( "*" ));
		  Valid_Branches = ( "Chemical");
		  Display_Names = ( "Chemical");
			Images = ("CaptChemGeneric.jpg");
		});
	},
	{ // Hazards
	  Name = "Hazards";
	  Level = 3;
	  Master_Level = ("Threat Area");
	  Display = true;
	  AutoSelect = ("Chemical");
		Branches = (
		
		{
			Master_Branches = (("Chemical"));
			Valid_Branches = ( "Chemical");
		  Display_Names = ( "Chemical" );
		});
	},
	// Pathology/Toxidrome?
	{ // Agent Name
	  Name = "Agent Name";
	  Level = 4;
	  Master_Level = ("Scenario Type", "Hazards");
	  Display = true;
	  Branches = (
		/*{
			Master_Branches = ( ("Radiological") );
			Valid_Branches = ("AmO2","Cf2O3","Co","CsCl(s)","NaI(aq)","Ir","Po","PuO2","RaCl2","SrF2","U3O8","Co(NO3)2(aq)","CsCl(aq)","SrTiO3");
			Display_Names =  ("(U) Am-241","(U) Cf-252","(U) Co-60","(U) Cs-137","(U) I-131","(U) Ir-192","(U) Po-210","(U) Pu-238","(U) Ra-226","(U) Sr-90 Fluoride","(U) Uranium","(FOUO) Aqueous Co-60 Nitrate","(FOUO) Aqueous Cs-137 Chloride","(U) Sr-90 Titanate");
			Descriptions = ("Americium 241","Californium 252","Cobalt 60 Metal","Cesium 137 Chloride","Aqueous Sodium Iodine 131","Iridium 192","Polonium","Plutonium 238 Oxide","Radium 226 Chloride","Strontium 90 Fluoride","Uranium Yellow Cake","Aqueous Cobalt 60 Nitrate","Aqueous Cesium 137 Chloride","Strontium 90 Titanate");
			Images = ("CsCl.jpg","CsCl.jpg","CsCl.jpg","CsCl.jpg","CsCl.jpg","CsCl.jpg","CsCl.jpg","CsCl.jpg","CsCl.jpg","CsCl.jpg","CsCl.jpg","CsCl.jpg","CsCl.jpg","CsCl.jpg","CsCl.jpg");
		},*/
		{
			Master_Branches = ( ("*"), ("Radiological") );
			Valid_Branches = ("Battellium","Battellium(aq)");
			Display_Names =  ("(U) Battellium","(U) Aqueous Battellium");
			Descriptions = ("Fake Rad Agent For Unclassified Testing","Fake Rad Agent For Unclassified Testing");
			Images = ("CsCl.jpg","CsCl.jpg");
		},
		{
			Master_Branches = ( ("SingleScenario", "AgentScreening"), ("Bacteria") );
			Valid_Branches = ("New_Agent","BIO_Bacteria","BadBacteria","ReallyBadBacteria","VeryBadBacteria","B","C","CC","OO","E","J","L","M","O","K","S","T","U","X","R");
			Display_Names =  ("New Agent","(U) <i>Generic</i> Bacteria","(U) <i>Bad</i> Bacteria","(U) <i>Really Bad</i> Bacteria","(U) <i>Very Bad</i> Bacteria","(U) <i>B. anthracis</i>","(U) <i>Y. pestis</i>","(U//FOUO) MDR <i>B. anthracis</i>","(U//FOUO) MDR <i>Y. pestis</i>","(U) <i>F. tularensis</i>","(U) <i>C. burnetii</i>","(U) <i>B. mallei</i>","(U) <i>B. Pseudomallei</i>","(U) <i>R. prowazekii</i>","(U) <i>Brucella</i> Spp.","(U) <i>S. enterica</i> Typhi","(U) <i>E. coli</i> O157:H7", "(U) <i>V. cholerae</i>", "(U) <i>S. dysenteriae</i>","(U) <i>C. psittaci</i>");
			Descriptions = ("Create a new agent","Generic bacteria contaminant","Generic bacteria contaminant this is bad","Generic bacteria contaminant this is really bad","Generic bacteria contaminant this is very bad","Anthrax","Plague","Multi-drug resistant anthrax", "Multi-drug resistant plague", "Tularemia","Q Fever","Glanders","Melioidosis","Epidemic Typhus", "Brucellosis", "Typhoid fever", "Food/Water borne gastroenteritis", "Cholera", "Shigellosis", "Psittacosis");
			Images = ("CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg");
		},
		{
			Master_Branches = ( ("SingleScenario", "AgentScreening"), ("Virus") );
			Valid_Branches = ("BIO_Virus","BadVirus","ReallyBadVirus","VeryBadVirus","New_Agent","A","F","H","I","DD","EE","G","MM","NN","N","PP","Y","Z","FF","II");
			Display_Names =  ("Generic Virus","Bad Virus","Really Bad Virus","Very Bad Virus","New Agent","(U) Variola major virus","(U) Ebola virus","(U) Marburg virus","(U) Junin virus","(U) CCHF virus", "(U) Monkeypox virus", "(U) Lassa virus", "(U) SARS virus", "(U) Rabies virus","(U) EEE virus","(U) VEE virus","(U) Nipah virus","(U) RVF virus", "(U) Herpes B virus", "(U) Norovirus");
			Descriptions = ("Generic virus contaminant","Generic virus contaminant this is bad","Generic virus contaminant this is really bad","Generic virus contaminant this is very bad","Create a new agent","Smallpox", "Ebola Virus Disease","Marburg Virus Disease","Argentine Hemorrhagic fever", "Crimean Congo Hemorrhagic fever", "Monkeypox", "Lassa Hemorrhagic fever", "Severe Acute Respiratory Syndrome", "Rabies", "Eastern Equine Encephalitis", "Venezuelan Equine Encephalitis", "Nipah", "Rift Valley fever", "Herpes B virus", "Food/Water borne gastroenteritis");
			Images = ("CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGenericVirus.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg");
		},
		{
			Master_Branches = ( ("SingleScenario", "AgentScreening"), ("Biological Toxin") );
			Valid_Branches = ("BIO_Toxin","BadToxin","ReallyBadToxin","VeryBadToxin","New_Agent","D", "P", "GG", "HH", "Q", "JJ");
			Display_Names =  ("Generic Biological Toxin","Bad Toxin","Really Bad Toxin","Very Bad Toxin","New Agent","(U) <i>C. botulinum</i> neurotoxin", "(U) Ricin toxin", "(U) Abrin toxin", "(U) Saxitoxin", "(U) SEB", "(U) Alpha amanitin toxin");
			Descriptions = ("Generic biological toxin contaminant","Generic biological toxin contaminant that is bad","Generic biological toxin contaminant that is realy bad","Generic biological toxin contaminant that is Verybad","Create a new agent","Botulism", "Ricin toxin", "Abrin toxin", "Saxitoxin", "Staphylococcus enterotoxin B", "Alpha amanitin");
			Images = ("CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg");
		},
		{
			Master_Branches = ( ("BatchedScenario","ParameterSensitivity" ), ("Bacteria") );
			Valid_Branches = ("BIO_Bacteria","B","C","CC","OO","E","J","L","M","O","K","S","T","U","X","R");
			Display_Names =  ("(U) <i>Generic</i> Bacteria","(U) <i>B. anthracis</i>","(U) <i>Y. pestis</i>","(U//FOUO) MDR <i>B. anthracis</i>","(U//FOUO) MDR <i>Y. pestis</i>","(U) <i>F. tularensis</i>","(U) <i>C. burnetii</i>","(U) <i>B. mallei</i>","(U) <i>B. Pseudomallei</i>","(U) <i>R. prowazekii</i>","(U) <i>Brucella</i> Spp.","(U) <i>S. enterica</i> Typhi","(U) <i>E. coli</i> O157:H7", "(U) <i>V. cholerae</i>", "(U) <i>S. dysenteriae</i>","(U) <i>C. psittaci</i>");
			Descriptions = ("Generic bacteria contaminant","Anthrax","Plague","Multi-drug resistant anthrax", "Multi-drug resistant plague", "Tularemia","Q Fever","Glanders","Melioidosis","Epidemic Typhus", "Brucellosis", "Typhoid fever", "Food/Water borne gastroenteritis", "Cholera", "Shigellosis", "Psittacosis");
			Images = ("CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg");
		},
		{
			Master_Branches = ( ("BatchedScenario","ParameterSensitivity"), ("Virus") );
			Valid_Branches = ("BIO_Virus","A","F","H","I","DD","EE","G","MM","NN","N","PP","Y","Z","FF","II");
			Display_Names =  ("Generic Virus","(U) Variola major virus","(U) Ebola virus","(U) Marburg virus","(U) Junin virus","(U) CCHF virus", "(U) Monkeypox virus", "(U) Lassa virus", "(U) SARS virus", "(U) Rabies virus","(U) EEE virus","(U) VEE virus","(U) Nipah virus","(U) RVF virus", "(U) Herpes B virus", "(U) Norovirus");
			Descriptions = ("Generic biological toxin contaminant","Smallpox", "Ebola Virus Disease","Marburg Virus Disease","Argentine Hemorrhagic fever", "Crimean Congo Hemorrhagic fever", "Monkeypox", "Lassa Hemorrhagic fever", "Severe Acute Respiratory Syndrome", "Rabies", "Eastern Equine Encephalitis", "Venezuelan Equine Encephalitis", "Nipah", "Rift Valley fever", "Herpes B virus", "Food/Water borne gastroenteritis");
			Images = ("CaptBioGeneric.jpg","CaptBioGenericVirus.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg");
		},
		{
			Master_Branches = ( ("BatchedScenario","ParameterSensitivity"), ("Biological Toxin") );
			Valid_Branches = ("BIO_Toxin","D", "P", "GG", "HH", "Q", "JJ");
			Display_Names =  ("Generic Biological Toxin","(U) <i>C. botulinum</i> neurotoxin", "(U) Ricin toxin", "(U) Abrin toxin", "(U) Saxitoxin", "(U) SEB", "(U) Alpha amanitin toxin");
			Descriptions = ("Generic biological toxin contaminant","Botulism", "Ricin toxin", "Abrin toxin", "Saxitoxin", "Staphylococcus enterotoxin B", "Alpha amanitin");
			Images = ("CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg","CaptBioGeneric.jpg");
		},
		{
			Master_Branches = ( ("*"), ("Protozoan") );
			Valid_Branches = ("Protozoan","V");
			Display_Names =  ("Giardia","(U) <i>C. parvum</i>");
			Descriptions = ("A flagellated protozoan parasite that colonizes and reproduces in the small intestine causing giardiasis","C. parvum");
			Images = ("Giardia.jpg","Giardia.jpg");
		},
		{
			Master_Branches = ( ("*"), ("IND") );
			Valid_Branches = ("IND");
			Display_Names =  ("IND");
			Descriptions = ("An improvised nuclear device.");
			Images = ("CaptINDGeneric.jpg");
		},
		{
			Master_Branches = (("*"), ("Chemical") );
			Valid_Branches = ("C026", "C015", "C153", "C036", "C011", "C060", "C040", "C069", "C134", "C075", "C156", "C006", "C008", "C003", "C034", "C033");
			Display_Names = ("Pestycide", "Cryinoshame", "Methyl-ethyl-badstuff", "Mortonium", "Nervous Agent", "Bracidla", "Methyl-ethyl-ricky-lucy", "Nobrainsatol", "Alldeathanyl", "Dopeyoid", "Chew-Backy", "Amassofpoxuponya", "Justinhale", "Nobreathitol", "Ourcynic", "Stupefil");
			Descriptions = ("Anticoagulant Toxidrome", "Blood Toxidrome", "Blood Toxidrome", "Blood Toxidrome", "Cholinergic Toxidrome", "Cholinergic Toxidrome", "Convulsant Toxidrome", "Encephalopathy Toxidrome", "Metabolic Toxidrome", "Opioid Toxidrome", "Stimulant Toxidrome", "Vesicant Toxidrome", "Upper Pulmonary Toxidrome", "Lower Pulmonary Toxidrome", "Metabolic Toxidrome", "Blood Toxidrome");
			Images = ("Anticoagulant.jpg", "Blood.jpg", "Blood.jpg", "Blood.jpg", "Cholinergic.jpg", "Cholinergic.jpg", "Convulsant.jpg", "Encephalopathy.jpg", "Metabolic.jpg", "Opioid.jpg", "Stimulant.jpg", "Vesicant.jpg", "Upper Pulmonary.jpg", "Lower Pulmonary.jpg", "Metabolic.jpg", "Blood.jpg");
		});
  },
	{ // Med Mit Agent
		Name = "Med Mit Agent";
		Level = 5;
		Display = false;
		Master_Level = ("Agent Name");
		AutoSelect = (("New_Agent"));
		Branches = (
		{
			Master_Branches = (("VeryBadToxin","ReallyBadVirus","ReallyBadBacteria","BadBacteria","BIO_Bacteria","BadVirus","BIO_Virus","MM", "N", "NN" , "PP", "Y", "Z", "DD", "EE" , "FF", "G", "R" , "J" , "L", "M", "O" , "A", "F", "H" , "I", "C001"));
			Valid_Branches = ("MedMitInhalation");
			Display_Names = ("MedMitInhalation");
			Images = ("Inhalation.png");
		},
		{
			Master_Branches = (("VeryBadVirus","VeryBacteria","ReallyBadToxin","BadToxin","BIO_Toxin","II" ,"V", "HH" ,"JJ","S", "T", "U" , "X"));
			Valid_Branches = ("MedMitIngestion");
			Display_Names = ("MedMitIngestion");
			Images = ("Ingestion.png");
		},
		{

			Master_Branches = (("D","B", "C", "E","CC", "K", "OO",  "GG",  "P", "Q"));
			Valid_Branches = ("MedMitBoth");
			Display_Names = ("MedMitBoth");
			Images = ("Ingestion+Inhalation.png");
		},
		{
			Master_Branches = (("New_Agent"));
			Valid_Branches = ("MedMitInhalation","MedMitIngestion","MedMitBoth");
			Display_Names = ("MedMitInhalation","MedMitIngestion","MedMitBoth");
			Images = ("Inhalation.png","Ingestion.png","Ingestion+Inhalation.png");
		},
		{
			Master_Branches = (("Protozoan"));
			Valid_Branches = ("MedMitOff");
			Display_Names = ("MedMitOff");
			Images = ("MedMitOff.png");
		},
		/*{
			Master_Branches = (("AmO2","Cf2O3","Co","CsCl(s)","NaI(aq)","Ir","Po","PuO2","RaCl2","SrF2","U3O8","Co(NO3)2(aq)","CsCl(aq)","SrTiO3"));
			Valid_Branches = ("MedMitOff");
			Display_Names = ("MedMitOff");
			Images = ("MedMitOff.png");
		}*/
		{
			Master_Branches = (("Battellium","Battellium(aq)"));
			Valid_Branches = ("MedMitOff");
			Display_Names = ("MedMitOff");
			Images = ("MedMitOff.png");
		});
	},
	{ // Phase
	  Name = "Phase"; // no mapping to full tree
	  Level = 6;
	  Display = false;
	  Branches = (
		{
		  Master_Branches = (( "*" ));
		  Valid_Branches = ( "Solid","Liquid","Gas","Mixture" );
		  Display_Names = ( "Solid","Liquid","Gas","Mixture" );
		});
	},
	{ // Target Types
	  Name = "Target Types"; // no mapping to full tree
	  Level = 7;
	  Master_Level = ("Hazards");
	  Display = false;
	  Branches = (
		{
			Master_Branches = (("*"));
			Valid_Branches = ( "InhalationOnly","IngestionOnly","All");
			Display_Names = ( "Inhalation","Ingestion","All");
			Descriptions = ("Inhalation","Ingestion","All");
			Images = ("Inhalation.png","Ingestion.png","Ingestion+Inhalation.png");
		});
	},
	{ // Dry Release
	  Name = "Dry Release Possible"; // no mapping to full tree
	  Level = 8;
	  Display = false;
	  Branches = (
		{
		  Master_Branches = (("*"));
		  Valid_Branches = ("False","True");
		  Display_Names = ("False","True");
		});
	},
	{ // Volatility
	  Name = "Volatility"; // no mapping to full tree
	  Level = 9;
	  Display = false;
	  Branches = (
		{
		  Master_Branches = (( "*" ));
		  Valid_Branches = ("Non-Volatile","Volatile" );
		  Display_Names = ("Non-Volatile","Volatile" );
		});
	},
	{ // Contagious
	  Name = "Contagious Agent"; // no mapping to full tree
    Level = 10;
	  Master_Level = ("Threat Area","Agent Name");
	  Display = false;
	  AutoSelect = (("Biological"),("New_Agent"));
	  Branches = (
		{
		  Master_Branches = (("Radiological"),("*"));
		  Valid_Branches = ( "False");
		  Display_Names = ( "False");
		  Images = ("CitySpreadOff.png");
		},
		{
		  Master_Branches = (("Biological"),("VeryBadToxin","ReallyBadVirus","ReallyBadBacteria","BadVirus","BadBacteria","BIO_Bacteria", "BIO_Virus","A", "C", "F", "H"));
		  Valid_Branches = ( "True");
		  Display_Names = ( "True");
		  Images = ("CitySpreadOn.png");
		},
		{
		  Master_Branches = (("Biological"),("VeryBadVirus","VeryBadBacteria","ReallyBadToxin","BadToxin","BIO_Toxin", "Protozoan", "B", "D", "E", "J" , "L", "M", "O", "I","CC", "K", "OO", "R" , "S", "T", "U" , "X", "GG", "HH" , "JJ", "P", "Q", "V", "DD", "EE" , "FF", "G", "II" , "MM", "N", "NN" , "PP", "Y", "Z"));
		  Valid_Branches = ( "False");
		  Display_Names = ( "False");
		  Images = ("CitySpreadOff.png");
		},
		{
			Master_Branches = (("Biological"), ("New_Agent"));
			Valid_Branches = ("True", "False");
			Display_Names = ("True","False");
			Images = ("CitySpreadOn.png", "CitySpreadOff.png");
		},
		{
		  Master_Branches = (("IND"),("*"));
		  Valid_Branches = ( "False");
		  Display_Names = ( "False");
		  Images = ("CitySpreadOff.png");
		},
		{
		  Master_Branches = (("Chemical"),("*"));
		  Valid_Branches = ( "False");
		  Display_Names = ( "False");
		  Images = ("CitySpreadOff.png");
		});
	},
	{ // Major Target
    Name = "Major Target"; // root level, all branches always get displayed
    Level = 11;
	  Master_Level = ("Threat Area", "Phase", "Target Types", "Med Mit Agent", "Contagious Agent","Agent Name");
	  Display = true;
      Branches = (
		{
			Master_Branches = (("Biological"),("*"),("InhalationOnly"), ("MedMitInhalation", "MedMitBoth"),("False"),("*"));
			Valid_Branches = ( "Indoor", "Outdoor");
		  	Display_Names = ( "Indoor", "Outdoor");
		  	Descriptions = ("Indoor Consequence Model", "Outdoor Consequence Model");
		  	Images = ("Indoor.png", "Outdoor.png");
		},
		{
			Master_Branches = (("Biological"),("*"),("InhalationOnly"), ("MedMitInhalation", "MedMitBoth"), ("True"),("*"));
			Valid_Branches = ( "Indoor", "Outdoor");
		  	Display_Names = ( "Indoor", "Outdoor");
		  	Descriptions = ("Indoor Consequence Model", "Outdoor Consequence Model");
		  	Images = ("Indoor.png", "Outdoor.png");
		},
		{
			Master_Branches = (("Biological"),("*"),("InhalationOnly"), ("MedMitOff"), ("*"),("*"));
			Valid_Branches = ( "Indoor", "Outdoor");
		  	Display_Names = ( "Indoor", "Outdoor");
		  	Descriptions = ("Indoor Consequence Model", "Outdoor Consequence Model");
		  	Images = ("Indoor.png", "Outdoor.png");
		},
		{
			Master_Branches = (("Biological"),("*"),("IngestionOnly"), ("MedMitIngestion", "MedMitBoth"), ("False"),("*"));
			Valid_Branches = ("Water", "Food");
		  	Display_Names = ("Water", "Food");
		  	Descriptions = ("Water Consequence Model", "Food Consequence Model", "Specify index infections and run the medical mitigation model" );
		  	Images = ("Water.png", "Food.png");
		},
		{
			Master_Branches = (("Biological"),("*"),("IngestionOnly"), ("MedMitIngestion", "MedMitBoth"), ("True"),("*"));
			Valid_Branches = ("Water", "Food");
		  	Display_Names = ("Water", "Food");
		  	Descriptions = ("Water Consequence Model", "Food Consequence Model" );
		  	Images = ("Water.png", "Food.png");
		},
		{
			Master_Branches = (("Biological"),("*"),("IngestionOnly"), ("MedMitOff"), ("*"),("*"));
			Valid_Branches = ("Water", "Food");
		  	Display_Names = ("Water", "Food");
		  	Descriptions = ("Water Consequence Model", "Food Consequence Model" );
		  	Images = ("Water.png", "Food.png");
		},
		{
			Master_Branches = (("Biological"),("*"),("All"), ("MedMitInhalation", "MedMitIngestion", "MedMitBoth"), ("False"),("*"));
			Valid_Branches = ( "Indoor", "Water", "Food", "Outdoor");
		  	Display_Names = ( "Indoor", "Water", "Food", "Outdoor");
		  	Descriptions = ("Indoor Consequence Model", "Water Consequence Model", "Food Consequence Model", "Outdoor Consequence Model");
		  	Images = ("Indoor.png", "Water.png", "Food.png", "Outdoor.png");
		},
		{
			Master_Branches = (("Biological"),("*"),("All"), ("MedMitInhalation", "MedMitIngestion", "MedMitBoth"), ("True"),("*"));
			Valid_Branches = ( "Indoor", "Water", "Food", "Outdoor");
		  	Display_Names = ( "Indoor", "Water", "Food", "Outdoor");
		  	Descriptions = ("Indoor Consequence Model", "Water Consequence Model", "Food Consequence Model", "Outdoor Consequence Model");
		  	Images = ("Indoor.png", "Water.png", "Food.png", "Outdoor.png");
		},
		{
			Master_Branches = (("Biological"),("*"),("All"), ("MedMitOff"), ("*"),("*"));
			Valid_Branches = ( "Indoor", "Water", "Food", "Outdoor");
		 	Display_Names = ( "Indoor", "Water", "Food", "Outdoor");
		 	Descriptions = ("Indoor Consequence Model", "Water Consequence Model", "Food Consequence Model", "Outdoor Consequence Model");
		  	Images = ("Indoor.png", "Water.png", "Food.png", "Outdoor.png");
		},
		{
			Master_Branches = (("IND"),("*"),("*"),("*"),("*"),("*"));
			Valid_Branches = ( "Outdoor");
			Display_Names = ( "Outdoor");
			Descriptions = ("Outdoor");
			Images = ("Outdoor.png");
		},
		{
			Master_Branches = (("Chemical"),("*"),("*"),("*"),("*"),("C026", "C015", "C153", "C036", "C011", "C060", "C040", "C069", "C134", "C075", "C156", "C006", "C008", "C003", "C034", "C033"));
			Valid_Branches = ("Outdoor", "Outdoor - CSC"); 
			Display_Names = ("Outdoor", "Outdoor - CSC"); 
			Descriptions = ("Outdoor", "Outdoor"); 
			Images = ("Outdoor.png", "Outdoor.png"); 
		},
		{
			Master_Branches = (("Chemical"),("Gas"),("*"),("*"),("*"),("*"));
			Valid_Branches = ( "Indoor");
		  	Display_Names = ( "Indoor");
		  	Descriptions = ( "Indoor");
		  	Images = ("Indoor.png");
		},
		{
			Master_Branches = (("Chemical"),("Solid","Liquid"),("*"),("*"),("*"),("*"));
      		Valid_Branches = ( "Indoor", "Food", "Water", "Dermal");
		  	Display_Names = ( "Indoor", "Food", "Water", "Dermal");
		  	Descriptions = ( "Indoor", "Food", "Water", "Dermal");
		  	Images = ("Indoor.png", "Food.png", "Water.png", "Dermal.png");
		},
		{ // Rad Indoor,Food,Outdoor
			Master_Branches = (("Radiological"),("*"),("*"),("*"),("*"),("Battellium"));
			Valid_Branches = ("Indoor", "Outdoor");
		  	Display_Names = ("Indoor", "Outdoor");
		  	Descriptions = ("Indoor", "Outdoor consequence model");
		  	Images = ("Indoor.png", "Outdoor.png");
		},
		/////////////////////////////////////////////////////
		// DELETE THIS SECTION DURING UNCLASSIFIED RELEASE
		///
		{ // Rad Indoor,Food,Outdoor
			Master_Branches = (("Radiological"),("*"),("*"),("*"),("*"),("Battellium(aq)"));
			Valid_Branches = ("Indoor", "Outdoor");
		  	Display_Names = ("Indoor", "Outdoor");
		  	Descriptions = ("Indoor", "Outdoor consequence model");
		  	Images = ("Indoor.png", "Outdoor.png");
		}
		/*
		{ // Rad Indoor,Food,Outdoor
			Master_Branches = (("Radiological"),("*"),("*"),("*"),("*"),("AmO2","Co","CsCl(s)","PuO2","SrF2","SrTiO3"));
			Valid_Branches = ("Indoor");
		  	Display_Names = ("Indoor");
		  	Descriptions = ("Indoor");
		  	Images = ("Indoor.png");
		},
		{ // Rad Indoor,Outdoor
			Master_Branches = (("Radiological"),("*"),("*"),("*"),("*"),("Cf2O3","Ir","Po","RaCl2","U3O8"));
			Valid_Branches = ("Indoor");
		  	Display_Names = ("Indoor");
		  	Descriptions = ("Indoor");
		  	Images = ("Indoor.png");
		},
		{ // Rad All
			Master_Branches = (("Radiological"),("*"),("*"),("*"),("*"),("Co(NO3)2(aq)","CsCl(aq)","NaI(aq)","Bt-360"));
			Valid_Branches = ("Indoor");
		  	Display_Names = ("Indoor");
		  	Descriptions = ("Indoor");
		  	Images = ("Indoor.png");
		}
		*/
		/////////////////
		/////////////////
		/////////////////
		);
	},
	{ // Target
		Name = "Target";
		Level = 12;
		Master_Level = ("Major Target","Threat Area","Dry Release Possible","Med Mit Agent", "Agent Name");
		Display = true;
		Branches = (
		{
			Master_Branches = (("Indoor"),("Biological","Radiological"),( "*"),( "*"),( "*"));
			Valid_Branches = ("Airplane",    "AirportTerminal"      , "Arena",     "Hospital",     "LegislativeBuilding" ,    "Museum",    "OfficeBuilding" ,       "ReligiousBuilding" ,     "ShoppingMall",      "Theatre",    "CruiseShip",     "Subway");
			Display_Names =  ( "Airplane",   "Terminal"             , "Arena",     "Hospital",     "Legislative Building",    "Museum",    "Office Building",       "Religious Building",      "Mall"       ,      "Theater",     "Cruise Ship",    "Subway" );
			Images =  (       "airplane.jpg", "airport terminal.jpg", "arena.jpg", "hospital2.jpg", "legislative building.jpg", "museum.jpg", "office building.jpg", "religious building.jpg", "shopping mall.jpg", "theater2.jpg", "cruise ship.jpg","subway.jpg" );
			Descriptions = ( "Aboard a commercial aircraft flying to and/or from an airport located within the United States",
						"Terminal area inside of a commercial airport",
						"Common area of an indoor entertainment arena",
						"A segmented indoor hospital",
						"Common area of a legislative facility",
						"Divided indoor public museum",
						"Indoor office building with segmented office space",
						"Common area of a worship center during a religious gathering",
						"Common area of an enclosed shopping mall",
						"Common area of a theater",
						"Nautical vessel with living quarters, shops, restaurants, and common areas",
						"Confined heavy-rail subway station or on board an underground subway car");
		},
		{
			Master_Branches = (("Food"),("Biological","Radiological"),( "False"),( "*"),( "*"));
			Valid_Branches = ("FluidWhiteMilk", "BaggedLeafSalad", "TableGrapes", "ProcessedCheeseSingles", "PastaSauce", "FrozenGroundBeefPatties", "FrozenLiquidEggPatties", "FrozenMeatPizza", "AppleJuice", "BottledWater");
			Display_Names =  ("Fluid Milk", "Bagged Leaf Salad", "Table Grapes", "Processed Cheese", "Pasta Sauce", "Frozen Ground Beef Patties", "Frozen Liquid Egg Patties", "Frozen Meat Pizza", "Apple Juice", "Terrorist Bottled Water");
			Images = 			("fluid white milk.jpg", "bagged leaf salad.jpg", "table grapes.jpg", "processed cheese singles.jpg", "pasta sauce.jpg",	"frozen ground beef patties.jpg", "frozen liquid egg patties.jpg", "frozen meat pizza.jpg", "apple juice.jpg", "bottled water.jpg");
			Descriptions = ( "Milk contaminated at one of the following: (1) a farm tank prior to shipment, (2) in a tanker truck prior to delivery to a dairy processing factory; or (3) in a storage silo post-pasteurization",
						"Lettuce contaminated through one of the following: (1) contaminated washing water; (2) adulteration of vegetable amendments; or (3) during bagging in the hopper/scale",
						"Grapes contaminated during quality inspection prior to shipment",
						"Processed cheese singles contaminated in the blending step in a production facility",
						"Pasta sauce contaminated in the blending step in a production facility",
						"Frozen beef patties for distribution in a quick-serve restaurant (QSR) contaminated during bin storage or in a beef blender via contaminated liquid carbon dioxide",
						"Frozen liquid egg patties for distribution in a QSR contaminated in a raw product transportation truck or in a storage silo post-pasteurization",
						"Frozen meat pizza contaminated during dough mixing or through adding contaminated sausage as a topping",
						"Apple juice contaminated during the juice extraction from bulk fruit or in a storage tank post-pasteurization",
						"Bottled water contaminated, bottled, and distributed by the perpetrator at a substantial event (e.g., a football game)");
		},
		{
			Master_Branches = (("Food"),("Biological","Radiological"),( "True"),( "*"),( "*"));
			Valid_Branches = ("FluidWhiteMilk", "BaggedLeafSalad", "TableGrapes", "ProcessedCheeseSingles", "SeasonedSnacks", "PastaSauce", "FrozenGroundBeefPatties", "FrozenLiquidEggPatties", "FrozenMeatPizza", "AppleJuice", "BottledWater");
			Display_Names =  ("Fluid Milk", "Bagged Leaf Salad", "Table Grapes", "Processed Cheese", "Seasoned Snacks", "Pasta Sauce", "Frozen Ground Beef Patties", "Frozen Liquid Egg Patties", "Frozen Meat Pizza", "Apple Juice", "Terrorist Bottled Water");
			Images = 			("fluid white milk.jpg", "bagged leaf salad.jpg", "table grapes.jpg", "processed cheese singles.jpg", "seasoned snacks.jpg", "pasta sauce.jpg",	"frozen ground beef patties.jpg", "frozen liquid egg patties.jpg", "frozen meat pizza.jpg", "apple juice.jpg", "bottled water.jpg");
			Descriptions = ( "Milk contaminated at one of the following: (1) a farm tank prior to shipment, (2) in a tanker truck prior to delivery to a dairy processing factory; or (3) in a storage silo post-pasteurization",
							"Lettuce contaminated through one of the following: (1) contaminated washing water; (2) adulteration of vegetable amendments; or (3) during bagging in the hopper/scale",
							"Grapes contaminated during quality inspection prior to shipment",
							"Processed cheese singles contaminated in the blending step in a production facility",
							"Barbeque potato chips contaminated through one of the following: (1) contaminated salt added for seasoning in a mixer; (2) contaminated seasoning hopper; or (3) added contaminant into a processing unit directly onto snack",
							"Pasta sauce contaminated in the blending step in a production facility",
							"Frozen beef patties for distribution in a quick-serve restaurant (QSR) contaminated during bin storage or in a beef blender via contaminated liquid carbon dioxide",
							"Frozen liquid egg patties for distribution in a QSR contaminated in a raw product transportation truck or in a storage silo post-pasteurization",
							"Frozen meat pizza contaminated during dough mixing or through adding contaminated sausage as a topping",
							"Apple juice contaminated during the juice extraction from bulk fruit or in a storage tank post-pasteurization",
							"Bottled water contaminated, bottled, and distributed by the perpetrator at a substantial event (e.g., a football game)");
		},
		{
			Master_Branches = (("Water"),("Biological","Radiological"),( "*"),( "*"),( "*"));
			Valid_Branches = ("Hydrant", "Apartment");
			Display_Names =  ("Hydrant", "Residence");
			Images = 			("hydrant.jpg","faucet.jpg");
			Descriptions = ( "Municipal water distribution system accessed via backflow through an 8� diameter or larger pipe (e.g., a fire hydrant)",
							"Municipal water distribution system accessed via backflow through a 6� diameter or smaller pipe (e.g., a residential connection)");
		},
		{
			Master_Branches = (("Outdoor"),("Biological","Radiological"),( "*"),( "*"),( "*"));
			Valid_Branches = ("MilitaryBases");
			Display_Names =  ("Military Base");
			Images = (        "militarybase.jpg", "urban center.jpg", "urban event2.jpg" );
			Descriptions = ("Facility owned and operated by the United States military",
							"Area within one of the top 100 US cities containing populations outdoors, in commercial buildings, and in residential structures",
							"Substantial outdoor gathering in a metropolitan setting such as a holiday event and festival");
		},
		{
			Master_Branches = (("Human Vector"),("*"),( "*"),( "*"),( "*"));
			Valid_Branches = ("City");
			Display_Names =  ("City Spread");
			Images = ("urban center.jpg");
			Descriptions = ("Unleash infected individuals on a city to spread a contagious disease.");
		},
		{
			Master_Branches = (("Mitigation Only"),("*"),( "*"),( "MedMitBoth"),( "*"));
			Valid_Branches = ("Generic Indoor", "Generic Outdoor", "Generic Food", "Generic Water");
			Display_Names =  ("Indoor Exposure", "Outdoor Exposure", "Food Exposure", "Water Exposure");
			Images = (		"shopping mall.jpg", "urban center.jpg", "fluid white milk.jpg", "faucet.jpg");
		},
		{
			Master_Branches = (("Mitigation Only"),("*"),( "*"),( "MedMitInhalation"),( "*"));
			Valid_Branches = ("Generic Indoor", "Generic Outdoor");
			Display_Names =  ("Indoor Exposure", "Outdoor Exposure");
			Images = (		"shopping mall.jpg", "urban center.jpg");
		},
		{
			Master_Branches = (("Mitigation Only"),("*"),( "*"),( "MedMitIngestion"),( "*"));
			Valid_Branches = ("Generic Food", "Generic Water");
			Display_Names =  ("Food Exposure", "Water Exposure");
			Images = (		"fluid white milk.jpg", "faucet.jpg");
		},
		{
			Master_Branches = (("Outdoor"),("IND"),( "*"),( "*"),( "*"));
			Valid_Branches = ("MilitaryBases");
			Display_Names =  ("Military Base");
			Images = ("militarybase.jpg");
		},
		{
			Master_Branches = (("Indoor"),("Chemical"),( "*"),( "*"),( "*"));
			Valid_Branches = ("Airplane",    "AirportTerminal"      , "Arena",     "Hospital",     "LegislativeBuilding" ,    "Museum",    "OfficeBuilding" ,       "ReligiousBuilding" ,     "ShoppingMall",      "Theatre",    "CruiseShip",     "Subway");
			Display_Names =  ( "Airplane",   "Terminal"             , "Arena",     "Hospital",     "Legislative Building",    "Museum",    "Office Building",       "Religious Building",      "Mall"       ,      "Theater",     "Cruise Ship",    "Subway" );
			Images =  (       "airplane.jpg", "airport terminal.jpg", "arena.jpg", "hospital2.jpg", "legislative building.jpg", "museum.jpg", "office building.jpg", "religious building.jpg", "shopping mall.jpg", "theater2.jpg", "cruise ship.jpg","subway.jpg" );
			Descriptions = ( "Aboard a commercial aircraft flying to and/or from an airport located within the United States",
							"Terminal area inside of a commercial airport",
							"Common area of an indoor entertainment arena",
							"A segmented indoor hospital",
							"Common area of a legislative facility",
							"Divided indoor public museum",
							"Indoor office building with segmented office space",
							"Common area of a worship center during a religious gathering",
							"Common area of an enclosed shopping mall",
							"Common area of a theater",
							"Nautical vessel with living quarters, shops, restaurants, and common areas",
							"Confined heavy-rail subway station or on board an underground subway car");
		},
		{
			Master_Branches = (("Food"),("Chemical"),( "*"),( "*"),( "*"));
			Valid_Branches = ("FluidWhiteMilk", "BaggedLeafSalad", "TableGrapes", "ProcessedCheeseSingles", "SeasonedSnacks", "PastaSauce", "FrozenGroundBeefPatties", "FrozenLiquidEggPatties", "FrozenMeatPizza", "AppleJuice", "BottledWater");
			Display_Names =  ("Fluid Milk", "Bagged Leaf Salad", "Table Grapes", "Processed Cheese", "Seasoned Snacks", "Pasta Sauce", "Frozen Ground Beef Patties", "Frozen Liquid Egg Patties", "Frozen Meat Pizza", "Apple Juice", "Terrorist Bottled Water");
			Images = 			("fluid white milk.jpg", "bagged leaf salad.jpg", "table grapes.jpg", "processed cheese singles.jpg", "seasoned snacks.jpg", "pasta sauce.jpg",	"frozen ground beef patties.jpg", "frozen liquid egg patties.jpg", "frozen meat pizza.jpg", "apple juice.jpg", "bottled water.jpg");
			Descriptions = ( "Milk contaminated at one of the following: (1) a farm tank prior to shipment, (2) in a tanker truck prior to delivery to a dairy processing factory; or (3) in a storage silo post-pasteurization",
							"Lettuce contaminated through one of the following: (1) contaminated washing water; (2) adulteration of vegetable amendments; or (3) during bagging in the hopper/scale",
							"Grapes contaminated during quality inspection prior to shipment",
							"Processed cheese singles contaminated in the blending step in a production facility",
							"Barbeque potato chips contaminated through one of the following: (1) contaminated salt added for seasoning in a mixer; (2) contaminated seasoning hopper; or (3) added contaminant into a processing unit directly onto snack",
							"Pasta sauce contaminated in the blending step in a production facility",
							"Frozen beef patties for distribution in a quick-serve restaurant (QSR) contaminated during bin storage or in a beef blender via contaminated liquid carbon dioxide",
							"Frozen liquid egg patties for distribution in a QSR contaminated in a raw product transportation truck or in a storage silo post-pasteurization",
							"Frozen meat pizza contaminated during dough mixing or through adding contaminated sausage as a topping",
							"Apple juice contaminated during the juice extraction from bulk fruit or in a storage tank post-pasteurization",
							"Bottled water contaminated, bottled, and distributed by the perpetrator at a substantial event (e.g., a football game)");
		},
		{
			Master_Branches = (("Food"),("Chemical"),( "*"),( "*"),( "*"));
			Valid_Branches = ("FluidWhiteMilk", "BaggedLeafSalad", "TableGrapes", "ProcessedCheeseSingles", "PastaSauce", "FrozenGroundBeefPatties", "FrozenLiquidEggPatties", "FrozenMeatPizza", "AppleJuice", "BottledWater");
			Display_Names =  ("Fluid Milk", "Bagged Leaf Salad", "Table Grapes", "Processed Cheese", "Pasta Sauce", "Frozen Ground Beef Patties", "Frozen Liquid Egg Patties", "Frozen Meat Pizza", "Apple Juice", "Terrorist Bottled Water");
			Images = 			("fluid white milk.jpg", "bagged leaf salad.jpg", "table grapes.jpg", "processed cheese singles.jpg", "pasta sauce.jpg",	"frozen ground beef patties.jpg", "frozen liquid egg patties.jpg", "frozen meat pizza.jpg", "apple juice.jpg", "bottled water.jpg");
			Descriptions = ( "Milk contaminated at one of the following: (1) a farm tank prior to shipment, (2) in a tanker truck prior to delivery to a dairy processing factory; or (3) in a storage silo post-pasteurization",
							"Lettuce contaminated through one of the following: (1) contaminated washing water; (2) adulteration of vegetable amendments; or (3) during bagging in the hopper/scale",
							"Grapes contaminated during quality inspection prior to shipment",
							"Processed cheese singles contaminated in the blending step in a production facility",
							"Pasta sauce contaminated in the blending step in a production facility",
							"Frozen beef patties for distribution in a quick-serve restaurant (QSR) contaminated during bin storage or in a beef blender via contaminated liquid carbon dioxide",
							"Frozen liquid egg patties for distribution in a QSR contaminated in a raw product transportation truck or in a storage silo post-pasteurization",
							"Frozen meat pizza contaminated during dough mixing or through adding contaminated sausage as a topping",
							"Apple juice contaminated during the juice extraction from bulk fruit or in a storage tank post-pasteurization",
							"Bottled water contaminated, bottled, and distributed by the perpetrator at a substantial event (e.g., a football game)");
		},
		{
			Master_Branches = (("Water"),("Chemical"),( "*"),( "*"),( "*"));
			Valid_Branches = ("Hydrant", "Apartment");
			Display_Names =  ("Hydrant", "Residence");
			Images = 			("hydrant.jpg","faucet.jpg");
			Descriptions = ( "Municipal water distribution system accessed via backflow through an 8� diameter or larger pipe (e.g., a fire hydrant)",
							"Municipal water distribution system accessed via backflow through a 6� diameter or smaller pipe (e.g., a residential connection)");
		},
		{
			Master_Branches = (("Outdoor", "Outdoor - CSC"),("Chemical"),( "*"),( "*"),( "Blood (Gas)", "C002", "C003", "C004", "C005", "C007", "C008", "C009", "C013", "C015", "C022", "C023", "C025", "C028", "C033", "C046", "C053", "C058", "C061", "C083", "C085", "C086", "C087", "C101", "C103", "C104", "C105", "C106", "C108", "C109", "C110", "C111", "C112", "C113", "C115", "C116", "C117", "C118", "C119", "C121", "C122", "C124", "C125", "C126", "C127", "C128", "C133", "C144", "C166", "C167", "Lower Pulmonary (Long Onset)", "Lower Pulmonary (Mid Onset)", "Lower Pulmonary", "Upper Irritant"));
			Valid_Branches = ("ChemicalProductionFacility");
			Display_Names =  ("Chemical Production Facility" );
			Images = (        "ChemicalProductionFacility.jpg" );
			Descriptions = ("Chemical facility within 10 miles of a military base");
		},
		{
			Master_Branches = (("Outdoor", "Outdoor - CSC"),("Chemical"),( "*"),( "*"),( "*"));
			Valid_Branches = ("MilitaryBases");
			Display_Names =  ("Military Base");
			Images = (        "militarybase.jpg");
			Descriptions = ("Facility owned and operated by the United States military");
		},
		{
			Master_Branches = (("Dermal"),("Chemical"),( "*"),( "*"),( "*"));
			Valid_Branches = ("Railings", "HandCleaner");
			Display_Names =  ("Railings", "Hand Sanitizer");
			Images = (		"Escalator.jpg", "HandCleaner.jpg");
		},
		{
			Master_Branches = (("Mitigation Only"),("*"),( "*"),( "MedMitBoth"),( "*"));
			Valid_Branches = ("Generic Indoor", "Generic Outdoor", "Generic Food", "Generic Water");
			Display_Names =  ("Indoor Exposure", "Outdoor Exposure", "Food Exposure", "Water Exposure");
			Images = (		"shopping mall.jpg", "urban center.jpg", "fluid white milk.jpg", "faucet.jpg");
		},
		{
			Master_Branches = (("Mitigation Only"),("*"),( "*"),( "MedMitInhalation"),( "*"));
			Valid_Branches = ("Generic Indoor", "Generic Outdoor");
			Display_Names =  ("Indoor Exposure", "Outdoor Exposure");
			Images = (		"shopping mall.jpg", "urban center.jpg");
		},
		{
			Master_Branches = (("Mitigation Only"),("*"),( "*"),( "MedMitIngestion"),( "*"));
			Valid_Branches = ("Generic Food", "Generic Water");
			Display_Names =  ("Food Exposure", "Water Exposure");
			Images = (		"fluid white milk.jpg", "faucet.jpg");
		});
  },
	{ // Urban Event Size
		Name = "Urban Event Size";
		Level = 13;
		Display = true;
		Master_Level = ("Target");
		Branches = (
		{
			Master_Branches = (("UrbanEvent"));
			Valid_Branches = ("Small", "Medium", "Large", "Giant");
			Display_Names = ("Small", "Medium", "Large", "Giant");
			Images = (        "SmallEvent.jpg", "MediumEvent.jpg", "LargeEvent.jpg", "GiantEvent.jpg");
			Descriptions = ("An event attended by 1,000-10,000 people, such as the Girl Scout Walk in San Francisco.",
					"An event attended by 10,000-100,000 people, such as the Western Idaho Fair in Boise.",
					"An event attended by 100,000-500,000 people, such as the St. Patrick's Day Parade in Chicago.",
					"An event attended by 500,000-1,000,000 people, such as New Year's Eve at Times Square in New York City.");
		});
	},
	{ // Food Contamination Point
		Name = "Food Contamination Point";
		Level = 14;
		Master_Level = ("Target","Threat Area");
		Display = true;
		Branches = (
		{
			Master_Branches = (("BaggedLeafSalad"),("*"));
			Valid_Branches = ("Lettuce Wash Water", "Ingredient Addition", "Scaling System");
			Display_Names  = ("Lettuce Wash Water", "Ingredient Addition", "Hopper/Scale System");
			Images 	 = ("LettuceWashWater.jpg", "IngredientAddition.jpg", "HopperScale_System.jpg");
			Descriptions = ("Contamination at the chiller unit that cools the water being fed into the wash tanks", "Contamination during storage or staging of shredded carrot product (prior to mixing into a salad product line)", "Contamination at the hopper/scale used to weigh the salad components into food service or retail consumer packages");
		},
		{
			Master_Branches = (("ProcessedCheeseSingles"),("*"));
			Valid_Branches = ("Blender");
			Display_Names  = ("Blender");
			Images 	 = ("blender2.jpg");
			Descriptions = ("Contamination at the blending step which allows the agent to be mixed uniformly with ingredients");
		},
		{
			Master_Branches = (("TableGrapes"),("*"));
			Valid_Branches = ("Field Quality Assurance Inspection");
			Display_Names  = ("Field Quality Assurance Inspection");
			Descriptions = ("Contamination of grape bunches during post-harvest quality assurance (QA) inspection of shipping lugs at the point of packing in Chile");
			Images 	 = ("FieldQualityAssuranceInspection.jpg");
		},
		{
			Master_Branches = (("PastaSauce"),("*"));
			Valid_Branches = ("Blender");
			Display_Names  = ("Blender");
			Images 	 = ("blender2.jpg");
			Descriptions = ("Contamination during mixing of the various ingredients (tomatoes, spices, vegetable oil, sweetener) in a blender");
		},
		{
			Master_Branches = (("FrozenGroundBeefPatties"),("Chemical", "Radiological"));
			Valid_Branches = ( "Combo Bin", "CO2 Tanker");
			Display_Names  = ( "Combo Bin", "Carbon Dioxide Tanker");
			Images 	 = ("ComboBin.jpg", "Co2Tanker.jpg");
			Descriptions = ("Contamination in large containers of ready-to-eat product (i.e., combo bins ) during storage", "Contamination through the liquid carbon dioxide (CO2) added during blending");
		},
		{
			Master_Branches = (("FrozenGroundBeefPatties"),("Biological"));
			Valid_Branches = ( "Combo Bin");
			Display_Names  = ( "Combo Bin");
			Images 	 = ("blender2.jpg");
			Descriptions = ("Contamination in large containers of ready-to-eat product (i.e., combo bins ) during storage");
		},
		{
			Master_Branches = (("FrozenLiquidEggPatties"),("*"));
			Valid_Branches = ( "Transport Tanker", "Finished Product Bulk Tank");
			Display_Names  = ("Transport Tanker", "Finished Product Bulk Tank");
			Images 	 = ("TransportTankerEggPatties.jpg", "FinishedProductBulkTankEggPatties.jpg");
			Descriptions = ("Contamination during transportation of liquid eggs to the processing plant (via a tanker truck)", "Contamination in the pasteurized product storage silo at the processing plant.");
		},
		{
			Master_Branches = (("FrozenMeatPizza"),("*"));
			Valid_Branches = ( "Dough Blending", "Sausage Hopper");
			Display_Names  = ( "Dough Blending", "Sausage Hopper");
			Images 	 = ("DoughBlending.jpg", "SausageHopper.jpg");
			Descriptions = ("Contamination at the dough mixer","Contamination at the sausage hopper immediately prior to addition of toppings to the pizza crust");
		},
		{
			Master_Branches = (("BottledWater"),("*"));
			Valid_Branches = ( "Distribution of Water");
			Display_Names  = ( "Distribution of Water");
			Images 	 = ("DistributionOfWater.jpg");
			Descriptions = ("Contamination of bottled water prior to covert distribution by a terrorist group at a large summertime gathering");
		},
		{
			Master_Branches = (("AppleJuice"),("*"));
			Valid_Branches = ( "Apple Pressing", "Finished Product Bulk Tank" );
			Display_Names  = ( "Apple Pressing", "Finished Product Bulk Tank");
			Images 	 = ("ApplePressing2.jpg", "FinishedProductBulkTankAppleJuice.jpg");
			Descriptions = ("Contamination at the pre-pasteurization juice extraction stage at a fresh-pressed juice facility", "Contamination at the post-pasteurization bulk storage tank or silo");
		},
		{
			Master_Branches = (("SeasonedSnacks"),("*"));
			Valid_Branches = ("Seasoning Mixer at the Toll Facility", "Seasoning Hopper at the Toll Facility", "Seasoning Hopper at the Chip Processing Facility");
			Display_Names  = ("Seasoning Mixer at the Toll Facility", "Seasoning Hopper at the Toll Facility", "Seasoning Hopper at the Chip Processing Facility");
			Images 	 = ("SeasoningMixer.jpg", "SeasoningHopper.jpg", "SeasoningHopperChipProcessingFacility.jpg");
			Descriptions = ("Contamination at the mixer in the seasonings plant (toll facility)", "Contamination at the weighing hoppers at the seasonings plant (toll facility)", "Contamination of seasoning at a dispensing hopper prior to application to chips at the chip processing facility");
		},
		{
			Master_Branches = (("FluidWhiteMilk"),("*"));
			Valid_Branches = ("On Farm Bulk Tank", "Tanker Truck", "Post Pasteurization Output Silo");
			Display_Names  = ("On Farm Bulk Tank", "Tanker Truck", "Post Pasteurization Output Silo");
			Images 	 = ("OnFarmBulkTanker.jpg", "TankerTruckWhiteMilk.jpg", "PostPasteurizationOutputSilo.jpg");
			Descriptions = ("Contamination at farm bulk tank which is used to store milk collected from the cow herd prior to transport to a processing facility","Contamination at the tanker truck which is used to transport milk from the farm bulk tank to the processor", "Contamination at the raw product receiving silo(s) where it could be diluted into a larger volume of milk from other tanker deliveries");
		});
	},
	{ // Food Facility Size
		Name = "Food Facility Size";
		Display_Name = "Food Facility Size";
		Level = 15;
		Master_Level = ("Target", "Food Contamination Point");
		Display = true;
		Branches = (
		{
			Master_Branches = (("SeasonedSnacks"), ("Seasoning Mixer at the Toll Facility"));
			Valid_Branches = ( "Small", "Medium", "Large" );
			Display_Names  = ( "Small", "Medium", "Large" );
			Images 	 = ("SmallFoodFacility.jpg", "MediumFoodFacility.jpg", "LargeFoodFacility.jpg");
			Descriptions = ("Toll facilities with mixer sizes between 227 and 454 kg capacity","Toll facilities with mixer sizes between 454 and 2,270 kg capacity","Toll facilities with mixer sizes between 2,270 and 4,540 kg capacity");
		},
		{
			Master_Branches = (("FluidWhiteMilk"), ("On Farm Bulk Tank"));
			Valid_Branches = ("Small", "Large");
			Display_Names  = ("Small", "Large");
			Images 	 = ("SmallFoodFacility.jpg", "LargeFoodFacility.jpg");
			Descriptions = ("Farms with small bulk tanks with typical size 3.79 m^3 (1,000 gal), up to 30.3 m^3 (8,000 gal)","Farms with small bulk tanks with typical size 7.57 m^3 (2,000 gal), up to 114 m^3 (30,000 gal)");
		},
		{
			Master_Branches = (("PastaSauce"), ("Blender"));
			Valid_Branches = ("Small", "Large");
			Display_Names  = ("Small", "Large");
			Images 	 = ("SmallFoodFacility.jpg", "LargeFoodFacility.jpg");
			Descriptions = ("Pasta sauce processors with typical blender sizes between 20 and 1,360 kg capacity","Pasta sauce processors with typical blender sizes between 737 and 5,700 kg capacity");
		},
		{
			Master_Branches = (("FrozenMeatPizza"), ("Dough Blending"));
			Valid_Branches = ("Small", "Large");
			Display_Names  = ("Small", "Large");
			Images 	 = ("SmallFoodFacility.jpg", "LargeFoodFacility.jpg");
			Descriptions = ("Pizza processors with typical dough mixer sizes between 91 and 249 kg capacity","Pizza processors with typical dough mixer sizes between 408 and 454 kg capacity");
		},
		{
			Master_Branches = (("FrozenMeatPizza"), ("Sausage Hopper"));
			Valid_Branches = ("Small", "Large");
			Display_Names  = ("Small", "Large");
			Images 	 = ("SmallFoodFacility.jpg", "LargeFoodFacility.jpg");
			Descriptions = ("Pizza processors with typical sausage hopper size 585 kg, ranging from 9 kg up to 1,130 kg capacity","Pizza processors with typical sausage hopper size 725 kg, ranging from 585 kg up to 1,130 kg capacity");
		},
		{
			Master_Branches = (("AppleJuice"), ("Apple Pressing"));
			Valid_Branches = ("Small");
			Display_Names  = ("Small");
			Images 	 = ("SmallFoodFacility.jpg");
		},
		{
			Master_Branches = (("AppleJuice"), ("Finished Product Bulk Tank"));
			Valid_Branches = ("Small", "Large");
			Display_Names  = ("Small", "Large");
			Images 	 = ("SmallFoodFacility.jpg", "LargeFoodFacility.jpg");
			Descriptions = ("Fresh-pressed juice facility", "Shelf-stable juice facility");
		});
	},
	{ // Food Contamination Point (CSQ Level)
		Name = "Food Contamination Point Anonymizer";
		Level = 16;
		Master_Level = ("Target","Food Contamination Point","Food Facility Size");
		Display = false;
		Branches = (
		{
			Master_Branches = (("BaggedLeafSalad"),("Lettuce Wash Water"),("*"));
			Valid_Branches = ("Point1");
			Display_Names  = ("Point1");
		},
		{
			Master_Branches = (("BaggedLeafSalad"),("Ingredient Addition"),("*"));
			Valid_Branches = ("Point2");
			Display_Names  = ("Point2");
		},
		{
			Master_Branches = (("BaggedLeafSalad"),("Scaling System"),("*"));
			Valid_Branches = ("Point3");
			Display_Names  = ("Point3");
		},
		{
			Master_Branches = (("ProcessedCheeseSingles"),("Blender"),("*"));
			Valid_Branches = ("Point1");
			Display_Names  = ("Point1");
		},
		{
			Master_Branches = (("TableGrapes"),("Field Quality Assurance Inspection"),("*"));
			Valid_Branches = ("Point1");
			Display_Names  = ("Point1");
		},
		{
			Master_Branches = (("PastaSauce"),("Blender"),("*"));
			Valid_Branches = ("Point1");
			Display_Names  = ("Point1");
		},
		{
			Master_Branches = (("FrozenGroundBeefPatties"),("Combo Bin"),("*"));
			Valid_Branches = ("Point1");
			Display_Names  = ("Point1");
		},
		{
			Master_Branches = (("FrozenGroundBeefPatties"),("CO2 Tanker"),("*"));
			Valid_Branches = ("Point2");
			Display_Names  = ("Point2");
		},
		{
			Master_Branches = (("FrozenLiquidEggPatties"),("Transport Tanker"),("*"));
			Valid_Branches = ( "Point1");
			Display_Names  = ("Point1");
		},
		{
			Master_Branches = (("FrozenLiquidEggPatties"),("Finished Product Bulk Tank"),("*"));
			Valid_Branches = ("Point2");
			Display_Names  = ("Point2");
		},
		{
			Master_Branches = (("FrozenMeatPizza"),("Dough Blending"),("*"));
			Valid_Branches = ( "Point1");
			Display_Names  = ("Point1");
		},
		{
			Master_Branches = (("FrozenMeatPizza"),("Sausage Hopper"),("*"));
			Valid_Branches = ( "Point2");
			Display_Names  = ("Point2");
		},
		{
			Master_Branches = (("BottledWater"),("Distribution of Water"),("*"));
			Valid_Branches = ( "Point1");
			Display_Names  = ("Point1");
		},
		{
			Master_Branches = (("AppleJuice"),("Apple Pressing"),("*"));
			Valid_Branches = ("Point1");
			Display_Names  = ("Point1");
		},
		{
			Master_Branches = (("AppleJuice"),("Finished Product Bulk Tank"),("Large"));
			Valid_Branches = ("Point1");
			Display_Names  = ("Point1");
		},
		{
			Master_Branches = (("AppleJuice"),("Finished Product Bulk Tank"),("Small"));
			Valid_Branches = ("Point2");
			Display_Names  = ("Point2");
		},
		{
			Master_Branches = (("SeasonedSnacks"),("Seasoning Mixer at the Toll Facility"),("*"));
			Valid_Branches = ("Point1");
			Display_Names  = ("Point1");
		},
		{
			Master_Branches = (("SeasonedSnacks"),("Seasoning Hopper at the Toll Facility"),("*"));
			Valid_Branches = ("Point2");
			Display_Names  = ("Point2");
		},
		{
			Master_Branches = (("SeasonedSnacks"),("Seasoning Hopper at the Chip Processing Facility"),("*"));
			Valid_Branches = ("Point3");
			Display_Names  = ("Point3");
		},
		{
			Master_Branches = (("FluidWhiteMilk"),("On Farm Bulk Tank"),("*"));
			Valid_Branches = ("Point1");
			Display_Names  = ("Point1");
		},
		{
			Master_Branches = (("FluidWhiteMilk"),("Tanker Truck"),("*"));
			Valid_Branches = ("Point2");
			Display_Names  = ("Point2");
		},
		{
			Master_Branches = (("FluidWhiteMilk"),("Post Pasteurization Output Silo"),("*"));
			Valid_Branches = ("Point3");
			Display_Names  = ("Point3");
		});
	},
	{ // Dissemination Mode
		Name = "Dissemination Mode";
		Level = 17;
		Master_Level = ("Target","Phase", "Threat Area","Dry Release Possible","Agent Name", "Volatility", "Food Contamination Point Anonymizer");
		Display = true;
		Branches = (
		{ // Rad Fake For Testing Indoor Dry
			Master_Branches = (("Airplane", "AirportTerminal", "Arena", "Hospital", "LegislativeBuilding" , "Museum", "OfficeBuilding" , "ReligiousBuilding" , "ShoppingMall", "Theatre", "CruiseShip","Subway"),("*"),("Radiological"),("*"),("Battellium"),("*"),("*"));
			Valid_Branches = ( "DryBlowerGroundPt", "IEDGroundPt","RED");
			Display_Names  = ( "Dry Point Blower","Dry IED","RED");
			Images = ( "DryBlower.jpg", "DryIED.jpg","CaptRADGeneric.jpg");
		},
		{ // Rad Fake For Testing Outdoor Dry
			Master_Branches = (("MilitaryBases"),("*"),("Radiological"),("*"),("Battellium"));
			Valid_Branches = ("IEDGroundPt");
			Display_Names  = ("Dry IED");
			Images = ("DryBlower.jpg", "DryIED.jpg");
		},
		{ // Rad Fake For Testing Indoor Wet
			Master_Branches = (("Airplane", "AirportTerminal", "Arena", "Hospital", "LegislativeBuilding" , "Museum", "OfficeBuilding" , "ReligiousBuilding" , "ShoppingMall", "Theatre", "CruiseShip","Subway"),("*"),("Radiological"),("*"),("Battellium(aq)"),("*"),("*"));
			Valid_Branches = ( "FoggerGroundPt");
			Display_Names  = ( "Point Sprayer");
			Images = ( "Sprayer.jpg");
		},
		{ // Rad Fake For Testing Outdoor Wet
			Master_Branches = (("MilitaryBases"),("*"),("Radiological"),("*"),("Battellium(aq)"));
			Valid_Branches = ("FoggerGroundPt","SprayerGroundLine");
			Display_Names  = ("Point Sprayer","Ground Line Sprayer");
			Images = ("Sprayer.jpg","GroundLineSprayer.jpg");
		},
		/*
		{ // Rad IED Only
			Master_Branches = (("Airplane", "AirportTerminal", "Arena", "Hospital", "LegislativeBuilding" , "Museum", "OfficeBuilding" , "ReligiousBuilding" , "ShoppingMall", "Theatre", "CruiseShip","Subway","Stadium", "UrbanCenter", "MilitaryBases", "UrbanEvent"),("*"),("Radiological"),("*"),("Cf2O3","Po","RaCl2","U3O8"));
			Valid_Branches = ("IEDGroundPt");
			Display_Names  = ("Dry IED");
			Images = ("DryIED.jpg");
		},
		{ // Rad Aqueous Indoor
			Master_Branches = (("Airplane", "AirportTerminal", "Arena", "Hospital", "LegislativeBuilding" , "Museum", "OfficeBuilding" , "ReligiousBuilding" , "ShoppingMall", "Theatre", "CruiseShip","Subway"),("*"),("Radiological"),("*"),("Co(NO3)2(aq)","CsCl(aq)","NaI(aq)"),("*"),("*"));
			Valid_Branches = ("FoggerGroundPt");
			Display_Names  = ("Point Sprayer");
			Images = ("Sprayer.jpg");
		},
		{ // Rad Aqueous Outdoor
			Master_Branches = (("MilitaryBases"),("*"),("Radiological"),("*"),("Co(NO3)2(aq)","CsCl(aq)","NaI(aq)"));
			Valid_Branches = ("FoggerGroundPt","SprayerGroundLine", "SprayerAerialLine");
			Display_Names  = ("Point Sprayer","Ground Line Sprayer","Aerial Sprayer");
			Images = ("Sprayer.jpg","GroundLineSprayer.jpg", "AerialSprayer.jpg");
		},
		{ // Rad Common
			Master_Branches = (("Airplane", "AirportTerminal", "Arena", "Hospital", "LegislativeBuilding" , "Museum", "OfficeBuilding" , "ReligiousBuilding" , "ShoppingMall", "Theatre", "CruiseShip","Subway","Stadium", "UrbanCenter", "UrbanEvent", "MilitaryBases"),("*"),("Radiological"),("*"),("AmO2","PuO2","SrF2","SrTiO3"));
			Valid_Branches = ( "DryBlowerGroundPt", "IEDGroundPt");
			Display_Names  = ( "Dry Point Blower","Dry IED");
			Images = ( "DryBlower.jpg", "DryIED.jpg");
		},
		{ // Rad Co and Cs Indoor
			Master_Branches = (("Airplane", "AirportTerminal", "Arena", "Hospital", "LegislativeBuilding" , "Museum", "OfficeBuilding" , "ReligiousBuilding" , "ShoppingMall", "Theatre", "CruiseShip","Subway"),("*"),("Radiological"),("*"),("Co","CsCl(s)"),("*"),("*"));
			Valid_Branches = ( "DryBlowerGroundPt", "IEDGroundPt","RED");
			Display_Names  = ( "Dry Point Blower","Dry IED","RED");
			Images = ( "DryBlower.jpg", "DryIED.jpg","CaptRADGeneric.jpg");
		},
		{ // Rad Co and Cs Outdoor
			Master_Branches = (("MilitaryBases"),("*"),("Radiological"),("*"),("Co","CsCl(s)"));
			Valid_Branches = ( "DryBlowerGroundPt", "IEDGroundPt");
			Display_Names  = ( "Dry Point Blower","Dry IED");
			Images = ( "DryBlower.jpg", "DryIED.jpg");
		},
		{ // Rad Iridium Indoor
			Master_Branches = (("Airplane", "AirportTerminal", "Arena", "Hospital", "LegislativeBuilding" , "Museum", "OfficeBuilding" , "ReligiousBuilding" , "ShoppingMall", "Theatre", "CruiseShip","Subway"),("*"),("Radiological"),("*"),("Ir"),("*"),("*"));
			Valid_Branches = ("IEDGroundPt","RED");
			Display_Names  = ("Dry IED","RED");
			Images = ("DryIED.jpg","CaptRADGeneric.jpg");
		},
		{ // Rad Iridium Outdoor
			Master_Branches = (("MilitaryBases"),("*"),("Radiological"),("*"),("Ir"));
			Valid_Branches = ("IEDGroundPt");
			Display_Names  = ("Dry IED");
			Images = ("DryIED.jpg");
		},
		*/
		{ // Indoor Bio Dry
			Master_Branches = (("Hospital", "Museum", "Airplane", "AirportTerminal", "Arena", "ShoppingMall", "Theatre", "CruiseShip","Subway" , "ReligiousBuilding"),("*"),("Biological"),("True"),("*"),("*"),("*"));
			Valid_Branches = ( "FoggerGroundPt", "DryBlowerGroundPt_ParticleSize", "IEDGroundPt_ParticleSize", "WetIEDGroundPt");
			Display_Names  = ( "Point Sprayer","Bio Dry Point Blower","Bio Dry IED","Wet IED");
			Images = ( "Sprayer.jpg", "DryBlower.jpg", "DryIED.jpg" , "WetIED.jpg");
		},
		{ // Indoor Bio Wet
			Master_Branches = (("Hospital", "Museum", "Airplane", "AirportTerminal", "Arena", "ShoppingMall", "Theatre", "CruiseShip","Subway" , "ReligiousBuilding"),("*"),("Biological"),("False"),("*"),("*"),("*"));
			Valid_Branches = ( "FoggerGroundPt", "WetIEDGroundPt");
			Display_Names  = ( "Point Sprayer","Wet IED" );
			Images = ( "Sprayer.jpg", "WetIED.jpg");
		},
		{ // Indoor Bio With Envelope
			Master_Branches = (("LegislativeBuilding" , "OfficeBuilding"),("*"),("Biological"),("True"),("*"),("*"),("*"));
			Valid_Branches = ( "FoggerGroundPt", "DryBlowerGroundPt_ParticleSize", "IEDGroundPt_ParticleSize", "WetIEDGroundPt", "EnvelopeContact");
			Display_Names  = ( "Point Sprayer",		   "Bio Dry Point Blower",					 "Bio Dry IED",	   				 "Wet IED",         "Envelope Contact");
			Images = (        "Sprayer.jpg", "DryBlower.jpg", "DryIED.jpg" , "WetIED.jpg", "EnvelopeContact.jpg");
		},
		{ // Outdoor Bio Dry
			Master_Branches = (("MilitaryBases"),( "*" ),("Biological"),("True"),("*"),("*"),("*"));
			Valid_Branches = ("DryBlowerGroundPt_ParticleSize","FoggerGroundPt","IEDGroundPt_ParticleSize","WetIEDGroundPt", "DryBlowerGroundLine","SprayerGroundLine","SprayerAerialLine");
			Display_Names  = ("Bio Dry Point Blower","Point Sprayer","Bio Dry IED","Wet IED","Ground Line Blower","Ground Line Sprayer","Aerial Sprayer");
			Images = (        "GroundPointBlower.jpg", "sprayer2.jpg", "DryIED.jpg" , "WetIED.jpg", "GroundLineBlower2.jpg", "GroundLineSprayer.jpg", "AerialSprayer.jpg");
		},
		{ // Outdoor Bio Wet
			Master_Branches = (("MilitaryBases"),( "*" ),("Radiological","Biological"),("False"),("*"),("*"),("*"));
			Valid_Branches = ("FoggerGroundPt","WetIEDGroundPt","SprayerGroundLine","SprayerAerialLine");
			Display_Names  = ("Point Sprayer","Wet IED","Ground Line Sprayer","Aerial Sprayer");
			Images 	 = ("sprayer2.jpg", "WetIED.jpg", "GroundLineSprayer.jpg", "AerialSprayer.jpg");
		},
		{ // IND
			Master_Branches = (("MilitaryBases"),( "*" ),("IND"),("*"),("IND"),("*"),("*"));
			Valid_Branches = ("0.01kT","0.1kT","1kT","10kT","100kT");
			Display_Names  = ("0.01kT IND","0.1kT IND","1kT IND","10kT IND","100kT IND");
			Images  = ("001kt.png","01kt.png","1kt.png","10kt.png","100kt.png");
		},
		{ // Indoor Chem Gas
			Master_Branches = (("Airplane", "AirportTerminal", "Arena", "Hospital", "LegislativeBuilding" , "Museum", "OfficeBuilding" , "ReligiousBuilding" , "ShoppingMall", "Theatre", "CruiseShip","Subway"),( "Gas" ),("Chemical"),("*"),("*"),("*"),("*"));
			Valid_Branches = ("GasGroundPt", "BinaryGroundPt", "IEDGroundPt");
			Display_Names  = ( "Point Gas"       , "Binary",		 "Dry IED"        );
			Images = ( "Gas.jpg", "Binary.jpg", "IED.jpg" );
		},
		{ // Indoor Chem Liquid (Non-Volatile)
			Master_Branches = (("Airplane", "AirportTerminal", "Arena", "Hospital", "LegislativeBuilding" , "Museum", "OfficeBuilding" , "ReligiousBuilding" , "ShoppingMall", "Theatre", "CruiseShip","Subway"),("Liquid" ),("Chemical"),("*"),("*"),("Non-Volatile"),("*"));
			Valid_Branches = ( "SprayerGroundPt", "IEDGroundPt", "DryBlowerGroundPt", "Pool"            , "PyrotechnicsGroundPt");
			Display_Names  = ( "Chemical Point Sprayer"        , "Dry IED"        , "Dry Point Blower"       , "Pool", "Pyrotechnics"        );
			Images = ("SprayerGroundPt.jpg", "IED.jpg", "DryBlower.jpg", "EvaporationPool.jpg", "Pyrotechnics.jpg" );
		},
		{ // Indoor Chem Liquid (Volatile)
			Master_Branches = (("Airplane", "AirportTerminal", "Arena", "Hospital", "LegislativeBuilding" , "Museum", "OfficeBuilding" , "ReligiousBuilding" , "ShoppingMall", "Theatre", "CruiseShip","Subway"),("Liquid" ),("Chemical"),("*"),("*"),("Volatile"),("*"));
			Valid_Branches = ( "SprayerGroundPt", "IEDGroundPt", "DryBlowerGroundPt", "Pool"            );
			Display_Names  = ( "Chemical Point Sprayer"        , "Dry IED"        , "Dry Point Blower"       , "Pool");
			Images = ("SprayerGroundPt.jpg", "IED.jpg", "DryBlower.jpg", "EvaporationPool.jpg" );
		},
		{ // Indoor Chem Solid
			Master_Branches = (("Airplane", "AirportTerminal", "Arena", "Hospital", "LegislativeBuilding" , "Museum", "OfficeBuilding" , "ReligiousBuilding" , "ShoppingMall", "Theatre", "CruiseShip","Subway"),("Solid"),("Chemical"),("*"),("*"),("*"),("*"));
			Valid_Branches = ( "SprayerGroundPt", "IEDGroundPt", "DryBlowerGroundPt","PyrotechnicsGroundPt");
			Display_Names  = ( "Chemical Point Sprayer"        , "Dry IED"        , "Dry Point Blower"       ,"Pyrotechnics"        );
			Images = ("SprayerGroundPt.jpg", "IED.jpg", "DryBlower.jpg", "Pyrotechnics.jpg" );
		},
		{ // Outdoor Chem Gas
			Master_Branches = (("MilitaryBases"),( "Gas" ),( "Chemical" ),("*"),("*"),("*"),("*"));
			Valid_Branches = ("GasGroundPt","IEDGroundPt","GasGroundLine");
			Display_Names  = ("Point Gas","Dry IED","Ground Line Gas");
			Images = ("GroundPointGas.jpg", "IED.jpg", "GroundLineGas.jpg");
		},
		{ // Outdoor Chem Liquid
			Master_Branches = (("MilitaryBases"),( "Liquid" ),( "Chemical" ),("*"),("*"),("*"),("*"));
			Valid_Branches = ("DryBlowerGroundPt","SprayerGroundPt","IEDGroundPt","Pool","DryBlowerGroundLine","SprayerGroundLine","DryBlowerAerialLine","SprayerAerialLine","AerialRainout");
			Display_Names  = ("Dry Point Blower","Chemical Point Sprayer","Dry IED","Pool","Ground Line Blower","Ground Line Sprayer","Aerial Blower","Aerial Sprayer","Aerial Rainout");
			Images = ("GroundPointBlower.jpg", "GroundPointSprayer.jpg", "IED.jpg", "LiquidPool.jpg", "GroundLineBlower.jpg", "GroundLineSprayer.jpg", "AerialBlower.jpg", "AerialSprayer.jpg", "AerialRainout.jpg" );
		},
		{ // Outdoor Chem Solid
			Master_Branches = (("MilitaryBases"),( "Solid" ),( "Chemical" ),("*"),("*"),("*"),("*"));
			Valid_Branches = ("DryBlowerGroundPt","SprayerGroundPt","IEDGroundPt","DryBlowerGroundLine","SprayerGroundLine","DryBlowerAerialLine","SprayerAerialLine");
			Display_Names  = ("Dry Point Blower","Chemical Point Sprayer","Dry IED","Ground Line Blower","Ground Line Sprayer","Aerial Blower","Aerial Sprayer");
			Images = ( "GroundPointBlower.jpg", "sprayer2.jpg", "DryIED.jpg", "GroundLineBlower2.jpg", "GroundLineSprayer.jpg", "AerialBlower.jpg", "AerialSprayer.jpg");
		},
		{ // Outdoor Chem Food
			Master_Branches = (("FluidWhiteMilk", "BaggedLeafSalad", "TableGrapes", "ProcessedCheeseSingles", "SeasonedSnacks", "PastaSauce", "FrozenGroundBeefPatties", "FrozenLiquidEggPatties", "FrozenMeatPizza", "AppleJuice", "BottledWater"),( "*" ),( "Chemical" ),("*"),("*"),("*"),("Point1"));
			Valid_Branches = ("FoodContaminationPt1");
			Display_Names  = ("FoodContaminationPt1");
			Images = ("");
		},
		{ // Outdoor Chem Food
			Master_Branches = (("FluidWhiteMilk", "BaggedLeafSalad", "TableGrapes", "ProcessedCheeseSingles", "SeasonedSnacks", "PastaSauce", "FrozenGroundBeefPatties", "FrozenLiquidEggPatties", "FrozenMeatPizza", "AppleJuice", "BottledWater"),( "*" ),( "Chemical" ),("*"),("*"),("*"),("Point2"));
			Valid_Branches = ("FoodContaminationPt2");
			Display_Names  = ("FoodContaminationPt2");
			Images = ("");
		},
		{ // Outdoor Chem Food
			Master_Branches = (("FluidWhiteMilk", "BaggedLeafSalad", "TableGrapes", "ProcessedCheeseSingles", "SeasonedSnacks", "PastaSauce", "FrozenGroundBeefPatties", "FrozenLiquidEggPatties", "FrozenMeatPizza", "AppleJuice", "BottledWater"),( "*" ),( "Chemical" ),("*"),("*"),("*"),("Point3"));
			Valid_Branches = ("FoodContaminationPt3");
			Display_Names  = ("FoodContaminationPt3");
			Images = ("");
		},
		{ // Outdoor Chem Food
			Master_Branches = (("Hydrant", "Apartment"),( "*" ),( "Chemical" ),("*"),("*"),("*"),("*"));
			Valid_Branches = ("Water");
			Display_Names  = ("Water");
			Images = ("");
		},
		{
			Master_Branches = (("ChemicalProductionFacility", "Pipeline"),( "*" ),( "Chemical" ),("*"),("*"),("*"),("*"));
			Valid_Branches = ("Planted_IED", "VehicleBorn_IED", "ProjectileExplosive", "Process_Manipulation");
			Display_Names  = ("Planted IED", "Vehicle-born IED", "Projectile Explosive", "Process Manipulation");
			Images = ("PlantedIED.jpg", "Automobile.jpg", "RPG.jpg", "ControlRoom.jpg");
		},
		{
			Master_Branches = (("Bulk", "Non-BulkHighwayTanker", "Barge", "Rail"),( "*" ),( "Chemical" ),("*"),("*"),("*"),("*"));
			Valid_Branches = ("Planted_IED", "VehicleBorn_IED", "ProjectileExplosive");
			Display_Names  = ("Planted IED", "Vehicle-born IED", "Projectile Explosive");
			Images = ("PlantedIED.jpg", "Automobile.jpg", "RPG.jpg");
		},
		{ // Dermal
			Master_Branches = (("Railings", "HandCleaner"),("*"),( "Chemical" ),("*"),("*"),("*"),("*"));
			Valid_Branches = ("Dermal");
			Display_Names  = ("Dermal");
			Images = ("Dermal.png");
		});
	},
	{ // Event Type
		Name = "Event Type";
		Level = 18;
		Master_Level = ("Major Target","Threat Area");
		Display = True;
		Branches = (
		{
			Master_Branches = (("Indoor","Outdoor"),("Radiological"));
			Valid_Branches = ( "Suspicious", "SymptomID" );
			Display_Names  = ( "Overt", "Covert" );
			Images = ("Overt.jpg", "Covert.jpg" );
			Descriptions = (
				"An attack that is an immediately evident event. Note: It is not known that an attack has taken place; rather, it is only known that something wrong or out-of-the-ordinary has occurred, and subsequently, first responders are deployed to the scene.",
				"An attack that is not readily apparent. Note: There is no immediate response to a Covert Event; discovery of the attack only results after the presentation and subsequent examination/diagnosis of a sufficient number of symptomatic victims."
			);
		},
		{
			Master_Branches = (("Indoor","Outdoor"),("Biological","Chemical"));
			Valid_Branches = ( "Suspicious", "Detection", "SymptomID" );
			Display_Names  = ( "Overt", "Detection", "Covert" );
			Images = (        "Overt.jpg", "Detection.jpg", "Covert.jpg" );
			Descriptions = (
				"An attack that is an immediately evident event. Note: It is not known that an attack has taken place; rather, it is only known that something wrong or out-of-the-ordinary has occurred, and subsequently, first responders are deployed to the scene.",
				"An attack that occurs in a location with applicable detection equipment (Note: Does not mean that the agent was detected; only that applicable detectors were present.)",
				"An attack that is not readily apparent. Note: There is no immediate response to a Covert Event; discovery of the attack only results after the presentation and subsequent examination/diagnosis of a sufficient number of symptomatic victims."
			);
		},
		{
			Master_Branches = (("Food","Water"),("*"));
			Valid_Branches = ( "SymptomID");
			Display_Names =  ( "Covert");
			Descriptions = ("An attack that is not readily apparent. Note: There is no immediate response to a Covert Event; discovery of the attack only results after the presentation and subsequent examination/diagnosis of a sufficient number of symptomatic victims.");
			Images = ("Covert.jpg" );
		},
		{
			Master_Branches = (("Human Vector"),("*"));
			Valid_Branches = ( "SymptomID");
			Display_Names  = ( "Covert");
			Images = ("Covert.jpg");
			Descriptions = (
				"Due to the nature of the human vector attack, it is assumed to be a covert event."
			);
		},
		{
			Master_Branches = (("Outdoor", "Outdoor - CSC"),("*"));
			Valid_Branches = ( "Suspicious");
			Display_Names  = ( "Overt");
			Images = ("Overt.jpg");
			Descriptions = (
				"An attack that is an immediately evident event. Note: It is not known that *an agent_type* attack has taken place; rather, it is only known that something wrong or out-of-the-ordinary has occurred, and subsequently, first responders are deployed to the scene."
			);
		},
		{
			Master_Branches = (("Dermal"),("*"));
			Valid_Branches = ( "SymptomID");
			Display_Names  = ( "Covert");
			Images = ("Covert.jpg");
			Descriptions = (
				"An attack that is not readily apparent. Note: There is no immediate response to a Covert Event; discovery of the attack only results after the presentation and subsequent examination/diagnosis of a sufficient number of symptomatic victims."
			);
		},
		{
			Master_Branches = (("Mitigation Only"),("*"));
			Valid_Branches = ( "Suspicious", "Detection", "SymptomID");
			Display_Names  = ( "Overt", "Detection","Covert");
			Images = ("Overt.jpg", "Detection.jpg", "Covert.jpg");
			Descriptions = (
				"An attack that is an immediately evident event. Note: It is not known that *an agent_type* attack has taken place; rather, it is only known that something wrong or out-of-the-ordinary has occurred, and subsequently, first responders are deployed to the scene.",
				"An attack that occurs in a location with applicable detection equipment (Note: Does not mean that the agent was detected; only that applicable detectors were present.)",
				"An attack that is not readily apparent. Note: There is no immediate response to a Covert Event; discovery of the attack only results after the presentation and subsequent examination/diagnosis of a sufficient number of symptomatic victims."
			);
		});
	},
	{ // Exposure Route
		Name = "Exposure Route"; // no mapping to full tree
		Level = 19;
		Master_Level = ("Agent Name","Major Target", "Dissemination Mode", "Target");
		Display = false;
		AutoSelect = (("New_Agent"));
		Branches = (
		{
			Master_Branches = ( ("*"), ("Outdoor"), ("AerialRainout"), ("*") );
			Valid_Branches = ("Dermal");
			Display_Names =  ("Dermal");
		},
		{
			Master_Branches = ( ("*"), ("Dermal"), ("*"), ("*") );
			Valid_Branches = ("Dermal");
			Display_Names =  ("Dermal");
		},
		{
			Master_Branches = ( ("*"), ("Outdoor","Indoor", "Outdoor - CSC"), ("*"), ("*") );
			Valid_Branches = ("Inhalation");
			Display_Names =  ("Inhalation");
			Images = ("Inhalation.png");
		},
		{
			Master_Branches = ( ("*"), ("Water","Food"), ("*") );
			Valid_Branches = ("Ingestion");
			Display_Names =  ("Ingestion");
			Images = ("Ingestion.png");
		},
		{
			Master_Branches = ( ("*"), ("Human Vector"), ("*"), ("*") );
			Valid_Branches = ("Inhalation");
			Display_Names =  ("Inhalation");
			Images = ("Inhalation.png");
		},
		{
			Master_Branches = (("*"), ("Mitigation Only"), ("*"), ("Generic Indoor", "Generic Outdoor") );
			Valid_Branches = ("Inhalation");
			Display_Names =  ("Inhalation");
			Images = ("Inhalation.png");
		},
		{
			Master_Branches = ( ("*"), ("Mitigation Only"), ("*"), ("Generic Food", "Generic Water") );
			Valid_Branches = ("Ingestion");
			Display_Names =  ("Ingestion");
			Images = ("Ingestion.png");
		});
	},
	{ // Population Profile
		Name = "Population Profile";
		Level = 20;
		Master_Level = ("Target");
		Display = false;
		Branches = (
		{
			Master_Branches = (("Airplane", "Arena", "Hospital", "LegislativeBuilding" , "OfficeBuilding" , "ReligiousBuilding" ,  "Theatre", "CruiseShip"));
			Valid_Branches = ("Pulse");
			Display_Names =  ("Pulse");
			Descriptions = ("A pulse population target");
		},
		{
			Master_Branches = (("AirportTerminal", "Museum","ShoppingMall"));
			Valid_Branches = ("Step");
			Display_Names =  ("Step");
			Descriptions = ("A step population target");
		});
	},
	{ // Ingestion Release Type
	  Name = "Ingestion Release Type"; // no mapping to full tree
	  Level = 21;
	  Master_Level = ("Threat Area","Target");
	  Display = false;
	  Branches = (
		{
		  Master_Branches = (("Biological", "Radiological", "Chemical"),("SeasonedSnacks"));
		  Valid_Branches = ("Dry");
		  Display_Names = ("Dry");
		},
		{
		  Master_Branches = (("Biological", "Radiological", "Chemical"),("FluidWhiteMilk", "BaggedLeafSalad", "TableGrapes", "ProcessedCheeseSingles", "PastaSauce", "FrozenGroundBeefPatties", "FrozenLiquidEggPatties", "FrozenMeatPizza", "AppleJuice", "BottledWater","Hydrant", "Apartment"));
		  Valid_Branches = ( "Wet");
		  Display_Names = ( "Wet");
		});
	},
	{ // Terrorist Control of Facility
		Name = "Terrorist Control of Facility"; // no mapping to full tree
		Level = 22;
		Master_Level = ("Major Target","Target");
		Display = false;
		Branches = (
		{
			Master_Branches = (("Food"),("BottledWater"));
			Valid_Branches = ("Controlled");
			Display_Names = ("Controlled");
		},
		{
			Master_Branches = (("Food"),("FluidWhiteMilk", "BaggedLeafSalad", "TableGrapes", "ProcessedCheeseSingles", "PastaSauce", "FrozenGroundBeefPatties", "FrozenLiquidEggPatties", "FrozenMeatPizza", "AppleJuice"));
			Valid_Branches = ( "Uncontrolled");
			Display_Names = ( "Uncontrolled");
		},
		{
			Master_Branches = (("Water","Outdoor","Human Vector","Indoor","Mitigation Only"),("*"));
			Valid_Branches = ( "Uncontrolled");
			Display_Names = ( "Uncontrolled");
		});
	},
	{ // Food Data Path
		Name = "Food Data Path"; // no mapping to full tree
		Level = 23;
		Master_Level = ("Target","Food Facility Size","Food Contamination Point");
		Display = false;
		Branches = (
		{
			Master_Branches = (("BaggedLeafSalad"),("*"),("Lettuce Wash Water"));
			Valid_Branches = ("BaggedLeafSalad_Lettuce Wash Water");
			Display_Names  = ("Bagged Leaf Salad Wash Water");
		},
		{
			Master_Branches = (("BaggedLeafSalad"),("*"),("Ingredient Addition"));
			Valid_Branches = ("BaggedLeafSalad_Ingredient Addition");
			Display_Names  = ("Bagged Leaf Salad Ingredient Addition");
		},
		{
			Master_Branches = (("BaggedLeafSalad"),("*"),("Scaling System"));
			Valid_Branches = ("BaggedLeafSalad_Scaling System");
			Display_Names  = ("Bagged Leaf Salad Scaling System");
		},
		{
			Master_Branches = (("ProcessedCheeseSingles"),("*"),("Blender"));
			Valid_Branches = ("ProcessedCheese_Blender");
			Display_Names  = ("Processed Cheese");
		},
		{
			Master_Branches = (("TableGrapes"),("*"),("Field Quality Assurance Inspection"));
			Valid_Branches = ("Grapes_Field Quality Assurance Inspection");
			Display_Names  = ("Table Grapes");
		},
		{
			Master_Branches = (("PastaSauce"),("Large"),("Blender"));
			Valid_Branches = ("PastaSauce_Blender_Large");
			Display_Names  = ("Pasta Sauce Large Blender");
		},
		{
			Master_Branches = (("PastaSauce"),("Small"),("Blender"));
			Valid_Branches = ("PastaSauce_Blender_Small");
			Display_Names  = ("Pasta Sauce Small Blender");
		},
		{
			Master_Branches = (("FrozenGroundBeefPatties"),("*"),("Combo Bin"));
			Valid_Branches = ("FrozenGroundBeefPatties_Combo Bin");
			Display_Names  = ("Frozen Ground Beef Patties Bin");
		},
		{
			Master_Branches = (("FrozenGroundBeefPatties"),("*"),("CO2 Tanker"));
			Valid_Branches = ("FrozenGroundBeefPatties_CO2 Tanker");
			Display_Names  = ("Frozen Ground Beef Patties CO2 Tanker");
		},
		{
			Master_Branches = (("FrozenLiquidEggPatties"),("*"),("Transport Tanker"));
			Valid_Branches = ( "FrozenLiquidEggPatties_Transport Tanker");
			Display_Names  = ("Frozen Liquid Egg Patties Tranport");
		},
		{
			Master_Branches = (("FrozenLiquidEggPatties"),("*"),("Finished Product Bulk Tank"));
			Valid_Branches = ("FrozenLiquidEggPatties_Finished Product Bulk Tank");
			Display_Names  = ("Frozen Liquid Egg Patties Bulk Tank");
		},
		{
			Master_Branches = (("FrozenMeatPizza"),("Large"),("Dough Blending"));
			Valid_Branches = ( "FrozenMeatPizza_Dough Blending_Large");
			Display_Names  = ("Frozen Meat Pizza Large Dough Blending");
		},
		{
			Master_Branches = (("FrozenMeatPizza"),("Large"),("Sausage Hopper"));
			Valid_Branches = ( "FrozenMeatPizza_Sausage Hopper_Large");
			Display_Names  = ("Frozen Meat Pizza Large Sausauge Hopper");
		},
		{
			Master_Branches = (("FrozenMeatPizza"),("Small"),("Dough Blending"));
			Valid_Branches = ( "FrozenMeatPizza_Dough Blending_Small");
			Display_Names  = ("Frozen Meat Pizza Small Dough Blending");
		},
		{
			Master_Branches = (("FrozenMeatPizza"),("Small"),("Sausage Hopper"));
			Valid_Branches = ( "FrozenMeatPizza_Sausage Hopper_Small");
			Display_Names  = ("Frozen Meat Pizza Small Sausauge Hopper");
		},
		{
			Master_Branches = (("BottledWater"),("*"),("Distribution of Water"));
			Valid_Branches = ( "BottledWater_Distribution of Water");
			Display_Names  = ("Terrorist Bottled Water");
		},
		{
			Master_Branches = (("AppleJuice"),("Small"),("Finished Product Bulk Tank"));
			Valid_Branches = ("AppleJuice_Finished Product Bulk Tank_Small");
			Display_Names  = ("Apple Juice Small Bulk Tank");
		},
		{
			Master_Branches = (("AppleJuice"),("Large"),("Finished Product Bulk Tank"));
			Valid_Branches = ("AppleJuice_Finished Product Bulk Tank_Large");
			Display_Names  = ("Apple Juice Large Bulk Tank");
		},
		{
			Master_Branches = (("AppleJuice"),("Small"),("Apple Pressing"));
			Valid_Branches = ("AppleJuice_Apple Pressing_Small");
			Display_Names  = ("Apple Juice Pressing");
		},
		{
			Master_Branches = (("SeasonedSnacks"),("Large"),("Seasoning Mixer at the Toll Facility"));
			Valid_Branches = ("SeasonedSnacks_Seasoning Mixer at the Toll Facility_Large");
			Display_Names  = ("Seasoned Snacks Large Seasoning Mixer");
		},
		{
			Master_Branches = (("SeasonedSnacks"),("Medium"),("Seasoning Mixer at the Toll Facility"));
			Valid_Branches = ("SeasonedSnacks_Seasoning Mixer at the Toll Facility_Medium");
			Display_Names  = ("Seasoned Snacks Medium Seasoning Mixer");
		},
		{
			Master_Branches = (("SeasonedSnacks"),("Small"),("Seasoning Mixer at the Toll Facility"));
			Valid_Branches = ("SeasonedSnacks_Seasoning Mixer at the Toll Facility_Small");
			Display_Names  = ("Seasoned Snacks Small Seasoning Mixer");
		},
		{
			Master_Branches = (("SeasonedSnacks"),("*"),("Seasoning Hopper at the Toll Facility"));
			Valid_Branches = ("SeasonedSnacks_Seasoning Hopper at the Toll Facility");
			Display_Names  = ("Seasoned Snacks Toll Seasoning Hopper");
		},
		{
			Master_Branches = (("SeasonedSnacks"),("*"),("Seasoning Hopper at the Chip Processing Facility"));
			Valid_Branches = ("SeasonedSnacks_Seasoning Hopper at the Chip Processing Facility");
			Display_Names  = ("Seasoned Snacks Chip Processing Seasoning Hopper");
		},
		{
			Master_Branches = (("FluidWhiteMilk"),("Large"),("On Farm Bulk Tank"));
			Valid_Branches = ("Milk_On Farm Bulk Tank_Large");
			Display_Names  = ("Fluid Milk Large Farm Tank");
		},
		{
			Master_Branches = (("FluidWhiteMilk"),("Small"),("On Farm Bulk Tank"));
			Valid_Branches = ("Milk_On Farm Bulk Tank_Small");
			Display_Names  = ("Fluid Milk Small Farm Tank");
		},
		{
			Master_Branches = (("FluidWhiteMilk"),("*"),("Tanker Truck"));
			Valid_Branches = ("Milk_Tanker Truck");
			Display_Names  = ("Fluid Milk Tanker Truck");
		},
		{
			Master_Branches = (("FluidWhiteMilk"),("*"),("Post Pasteurization Output Silo"));
			Valid_Branches = ("Milk_Post Pasteurization Output Silo");
			Display_Names  = ("Fluid Milk Pasteurization Silo");
		});
	},
	{ // Subway Outdoor
		Name = "Subway Outdoor";
		Level = 24;
		Master_Level = ("Threat Area", "Target");
		Display = true;
		Branches = (
		{
			Master_Branches = ( ("Biological", "Chemical"), ("Subway") );
			Valid_Branches = ("On", "Off");
			Display_Names =  ("On", "Off");
			Descriptions = ("Enable the Outdoor Consequence Model following the Subway Consequence Model","Disable the Outdoor Consequence Model following the Subway Consequence Model");
			Images = ( "OutdoorOn.jpg", "OutdoorOff.jpg" );
		},
		{
			Master_Branches = (("Radiological"), ("Subway") );
			Valid_Branches = ("Off");
			Display_Names =  ("Off");
			Descriptions = ("Enable the Outdoor Consequence Model following the Subway Consequence Model","Disable the Outdoor Consequence Model following the Subway Consequence Model");
			Images = ( "OutdoorOff.jpg" );
		});
	},
	{ // Medical Mitigation
		Name = "Medical Mitigation";
		Level = 25;
		Master_Level = ("Threat Area", "Major Target", "Med Mit Agent","Exposure Route");
		Display = true;
		Branches = (
		{
			Master_Branches = (("Chemical"), ("Indoor", "Food" ,"Outdoor", "Water", "Dermal", "Outdoor - CSC") , ("*"), ("*"));
			Valid_Branches = ("On", "Off");
			Display_Names =  ("On", "Off");
			Descriptions = ("Enable the Medical Mitigation model","Disable the Medical Mitigation model");
			Images = ( "MedMitOn.jpg", "MedMitOff.jpg" );
		},
		{
			Master_Branches = (("*"),("Human Vector", "Mitigation Only"),("*"), ("*"));
			Valid_Branches = ("On");
			Display_Names =  ("On");
			Descriptions = ("Enable the Medical Mitigation model");
			Images = ( "MedMitOn.jpg");
		},
		{
			Master_Branches = (("Biological"),("Indoor", "Outdoor","Food","Water"),("MedMitInhalation", "MedMitBoth","MedMitIngestion"), ("*"));
			Valid_Branches = ("On", "Off");
			Display_Names =  ("On", "Off");
			Descriptions = ("Enable the Medical Mitigation model","Disable the Medical Mitigation model");
			Images = ( "MedMitOn.jpg", "MedMitOff.jpg" );
		},
		{
			Master_Branches = (("Biological"),("*"),("MedMitOff"), ("*"));
			Valid_Branches = ("Off");
			Display_Names =  ("Off");
			Descriptions = ("Disable the Medical Mitigation model");
			Images = ("MedMitOff.jpg" );
		},
		{
			Master_Branches = (("Radiological","IND"),("*"),("*"), ("*"));
			Valid_Branches = ("Off");
			Display_Names =  ("Off");
			Descriptions = ("Disable the Medical Mitigation model");
			Images = ("MedMitOff.jpg" );
		});
  },
	{ // Dose Response Method
		Name = "Dose Response Method";
		Level = 26;
		Master_Level = ("Threat Area","Agent Name");
		Display = false;
		Branches = (
		{
			Master_Branches = ( ("Radiological"),("AmO2","Co","CsCl(s)","NaI(aq)","Ir","Po","PuO2","RaCl2","SrF2","U3O8","Co(NO3)2(aq)","CsCl(aq)","SrTiO3", "Battellium","Battellium(aq)"));
			Valid_Branches = ("Gryphon");
			Display_Names = ("Time Dependent");
			Descriptions = ("Time Dependent dose response model");
		},
		{
			Master_Branches = ( ("Radiological"),("Cf2O3"));
			Valid_Branches = ("Standard");
			Display_Names = ("Standard");
			Descriptions = ("Standard dose response model");
		});
	},
	{ // Mass
		Name = "Mass";
		Level = 27;
		Master_Level = ("Threat Area", "Major Target");
		Display = false;
		Branches = (
		{
			Master_Branches = (("Chemical"), ("Outdoor", "Outdoor - CSC"));
			Valid_Branches = ("CSC");
			Display_Names = ("CSC");
		});
	},
	{ // Detection
		Name = "Detection";
		Level = 28;
		Master_Level = ("Threat Area", "Target", "Agent Name");
		Display = true;
		Branches = (
			{
				Master_Branches = (("Chemical"), ("Hydrant", "Apartment", "Stadium", "Urban Center", "Urban Event", "Airplane", "AirportTerminal", "Arena", "Hospital", "LegislativeBuilding", "Museum", "OfficeBuilding", "ReligiousBuilding", "ShoppingMall", "Theatre", "CruiseShip", "FluidWhiteMilk", "BaggedLeafSalad", "TableGrapes", "ProcessedCheeseSingles", "PastaSauce", "FrozenGroundBeefPatties", "FrozenLiquidEggPatties", "FrozenMeatPizza", "AppleJuice", "Bottled Water", "Railings", "HandCleaner", "Bulk", "Non-BulkHighwayTanker", "Barge", "Rail", "ChemicalProductionFacility", "Pipeline"), ("*"));
				Valid_Branches = ("Not-Present");
				Display_Names = ("Not Present");
			},
			{
				Master_Branches = (("Chemical"), ("Subway"), ("Cholinergic (CWA)", "C001", "C006", "C012", "C021", "C024", "C027", "C071", "C072"));
				Valid_Branches = ("Present", "Not-Present");
				Display_Names = ("Present", "Not Present");
			},
			{
				Master_Branches = (("Chemical"), ("Subway"), ("*"));
				Valid_Branches = ("Not-Present");
				Display_Names = ("Not Present");
			}
		);
	},
	{ // Insider
		Name = "Insider";
		Level = 29;
		Master_Level = ("Threat Area", "Major Target");
		Display = true;
		Branches = (
			{
				Master_Branches = (("Chemical"), ("Indoor", "Outdoor", "Food", "Water", "Dermal"));
				Valid_Branches = ("NoAccess_NoFamiliarity");
				Display_Names = ("No insider access and no familiarity");
				Images = ("ContainmentDikeNo.jpg");
			},
			{
				Master_Branches = (("Chemical"), ("Outdoor - CSC"));
				Valid_Branches = ("NoAccess_NoFamiliarity", "Access_NoFamiliarity", "NoAccess_Familiarity", "Access_Familiarity");
				Display_Names = ("No insider access and no familiarity", "Insider access and no insider familiarity", "Insider familiarity only (no insider access)", "Insider access and insider familiarity");
				Images = ("ContainmentDikeNo.jpg", "Covert.jpg" , "ContainmentDikeNo.jpg", "Covert.jpg");
			}
		);
	},
	{ // Process Targeted
		Name = "Key Facility Process Targeted";
		Level = 30;
		Master_Level = ("Threat Area", "Target");
		Display = true;
		Branches = (
			{
				Master_Branches = (("Chemical"), ("ChemicalProductionFacility"));
				Valid_Branches = ("Vessel_Tanks", "TransferPts", "ProcessUnits_Support");
				Display_Names = ("Process vessels and tanks", "Transfer points", "Process units and support systems");
				Images = ("VesselTank.png", "TransferPoints.jpg", "SupportSystem.jpg");
			}
		);
	},
	{ // Detonation Height
		Name = "Detonation Height";
		Level = 31;
		Master_Level = ("Threat Area");
		Display = true;
		Branches = (
			{
			  Master_Branches = ( ("IND") );
			  Valid_Branches = ("0ft","250ft","500ft","1000ft","2000ft","5000ft");
			  Display_Names =  ("0 ft","250 ft","500 ft","1000 ft","2000 ft","5000 ft");
			  Descriptions = ("Warhead detonates at 0 ft","Warhead detonates at 250 ft","Warhead detonates at 500 ft","Warhead detonates at 1000 ft","Warhead detonates at 2000 ft","Warhead detonates at 5000 ft");
			  Images  = ("0ft.png","250ft.png","500ft.png","1000ft.png","2000ft.png","5000ft.png");
			}
		);
	},
	{ // Detonation
		Name = "Detonation";
		Level = 32;
		Master_Level = ("Threat Area");
		Display = true;
		Branches = (
		{
			Master_Branches = ( ("IND") );
			Valid_Branches = ("Target","Near Target");
			Display_Names = ("Target","Near Target");
			Images =  ("IND_Target.jpg","IND_NearTarget.jpg");
		});
	},
	{ // City
		Name = "City";
		Level = 33;
		Master_Level = ("Target", "Urban Event Size");
		Display = true;
		Branches = (
		);
	},
	{ // Stadium
		Name = "Stadium";
		Level = 34;
		Master_Level = ("Target");
		Display = true;
		Branches = (
		);
	},
	{ // MilitaryBase
		Name = "MilitaryBase";
		Level = 35;
		Master_Level = ("Target");
		Display = true;
		Branches = (
		);
	},
	{ // Facility
		Name = "Facility";
		Level = 36;
		Master_Level = ("Target", "Agent Name");
		Display = true;
		Branches = (
		);
	},
	{ // Subway
		Name = "Subway";
		Level = 37;
		Master_Level = ("Target","Dissemination Mode");
		Display = true;
		Branches = (
		);
	},
	{ // City Spread
		Name = "City Spread";
		Level = 38;
		Master_Level = ("Contagious Agent", "Medical Mitigation","Exposure Route");
		Display = true;
		Branches = (
		{
			Master_Branches = (("True"), ("On"), ("Inhalation"));
			Valid_Branches = ("On", "Off");
			Display_Names = ("On", "Off");
			Descriptions = ("Enable the City to City Spread model", "Disable the City to City Spread model");
			Images = ("CitySpreadOn.png", "CitySpreadOff.png");
		},
		{
			Master_Branches = (("*"), ("Off"), ("*"));
			Valid_Branches = ( "Off");
			Display_Names = ("Off");
			Descriptions = ("Disable the City to City Spread model");
			Images = ("CitySpreadOff.jpg");
		});
	}
		
	);
};

Valid = true;